(list_subtype (length_length 0 (length_length-1 nil 3476469169 ("" (induct-and-simplify "ss") nil nil) ((list type-decl nil list_adt nil) (bool nonempty-type-eq-decl nil booleans nil) (PRED type-eq-decl nil defined_types nil) (every adt-def-decl "boolean" list_adt nil) (number nonempty-type-decl nil numbers nil) (= const-decl "[T, T -> boolean]" equalities nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (length def-decl "nat" list_props nil) (S formal-subtype-decl nil list_subtype nil) (S_pred const-decl "[T -> boolean]" list_subtype nil) (boolean nonempty-type-decl nil booleans nil) (T formal-type-decl nil list_subtype nil) (list_induction formula-decl nil list_adt nil) (nnint_plus_posint_is_posint application-judgement "posint" integers nil)) shostak)))
