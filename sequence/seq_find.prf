(seq_find
 (find_pos_TCC1 0
  (find_pos_TCC1-1 nil 3582030677
   ("" (grind :theories seq_defs) nil nil)
   ((nth_equal formula-decl nil seq_defs nil)
    (length_empty formula-decl nil seq_defs nil)
    (T formal-type-decl nil seq_find nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (find_TCC1 0
  (find_TCC1-1 nil 3582030677 ("" (grind :theories seq_defs) nil nil)
   ((nth_equal formula-decl nil seq_defs nil)
    (length_empty formula-decl nil seq_defs nil)
    (T formal-type-decl nil seq_find nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (find_as_find_pos 0
  (find_as_find_pos-1 nil 3582030727
   ("" (skeep)
    (("" (expand (find find_pos))
      (("" (rewrite* filter_as_filter_pos)
        (("" (expand C1) (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((find_pos const-decl "lift[T]" seq_find nil)
    (find const-decl "lift[T]" seq_find nil)
    (C1 const-decl "PRED[[nat, T]]" seq_filter_props nil)
    (filter_as_filter_pos formula-decl nil seq_filter_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (seq nonempty-type-decl nil seq_defs nil)
    (T formal-type-decl nil seq_find nil))
   shostak))
 (find_pos_as_first_TCC1 0
  (find_pos_as_first_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil)
   nil nil))
 (find_pos_as_first 0
  (find_pos_as_first-1 nil 3582030835
   ("" (skeep)
    (("" (prop)
      (("1" (expand find_pos)
        (("1" (lift-if)
          (("1" (prop)
            (("1" (grind) nil nil)
             ("2" (typepred "filter_pos(s, pi)")
              (("2" (expand filter_pos?)
                (("2" (skeep)
                  (("2" (inst + "f(0)")
                    (("2" (split)
                      (("1" (inst -3 0)
                        (("1" (rewrite -3)
                          (("1" (decompose-equality -3) nil nil)) nil))
                        nil)
                       ("2" (inst -2 "f(0)")
                        (("2" (bddsimp -2)
                          (("1" (decompose-equality -5)
                            (("1" (grind) nil nil)) nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil)
                       ("3" (skeep)
                        (("3" (inst -3 j)
                          (("3" (bddsimp -3)
                            (("1" (skeep)
                              (("1"
                                (typepred j)
                                (("1"
                                  (expand preserves)
                                  (("1"
                                    (inst - 0 j_1)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep)
        (("2" (expand find_pos)
          (("2" (lift-if)
            (("2" (prop)
              (("1" (rewrite empty_as_empty :dir rl)
                (("1" (rewrite empty_as_member)
                  (("1" (inst - x) (("1" (postpone) nil nil)) nil))
                  nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (find_as_first_TCC1 0
  (find_as_first_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil) nil
   nil))
 (find_pos_true_TCC1 0
  (find_pos_true_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (T formal-type-decl nil seq_find nil)
    (empty? const-decl "bool" seq_defs nil))
   nil))
 (member_filter_pos_TCC1 0
  (member_filter_pos_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil)
   nil nil))
 (member_filter_TCC1 0
  (member_filter_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil) nil
   nil))
 (find_when_every_TCC1 0
  (find_when_every_TCC1-1 nil 3582030677 ("" (subtype-tcc) nil nil) nil
   nil)))

