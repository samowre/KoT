(trace2fmla
 (translate_lit_TCC1 0
  (translate_lit_TCC1-1 nil 3482241771 3482242497
   ("" (subtype-tcc) nil nil) proved
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (m formal-const-decl "nat" trace2fmla nil)
    (n formal-const-decl "nat" trace2fmla nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (i formal-const-decl "upto(n)" trace2fmla nil)
    (tr_literal? const-decl "bool" trace_resolution nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
     real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   95 90 nil nil))
 (translate_lit_TCC2 0
  (translate_lit_TCC2-1 nil 3482241771 3482242497 ("" (grind) nil nil)
   proved ((pred? adt-def-decl "boolean" funpred_adt nil)) 32 20 t
   nil))
 (translate_lit_TCC3 0
  (translate_lit_TCC3-1 nil 3482241771 3482242497 ("" (grind) nil nil)
   proved ((length def-decl "nat" list_props nil)) 24 20 t nil))
 (translate_lit_TCC4 0
  (translate_lit_TCC4-1 nil 3482241771 3482242497
   ("" (subtype-tcc) nil nil) proved
   ((prop_atom? const-decl "bool" resolution nil)
    (literal? const-decl "bool" resolution nil))
   56 40 nil nil))
 (translate_lit_TCC5 0
  (translate_lit_TCC5-1 nil 3482241771 3482242497 ("" (grind) nil nil)
   proved
   ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (pred? adt-def-decl "boolean" funpred_adt nil))
   39 30 t nil))
 (translate_lit_TCC6 0
  (translate_lit_TCC6-1 nil 3482241771 3482242497 ("" (grind) nil nil)
   proved ((length def-decl "nat" list_props nil)) 84 40 t nil))
 (translate_lit_TCC7 0
  (translate_lit_TCC7-1 nil 3482241771 3482242497
   ("" (subtype-tcc) nil nil) proved
   ((prop_atom? const-decl "bool" resolution nil)
    (literal? const-decl "bool" resolution nil))
   47 40 nil nil))
 (index_index 0
  (index_index-1 nil 3482242179 3482242185 ("" (grind) nil nil)
   unchecked
   ((tr_literal? const-decl "bool" trace_resolution nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
     real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (translate_lit const-decl "(literal?)" trace2fmla nil)
    (prop_atom? const-decl "bool" resolution nil)
    (index const-decl "nat" resolution nil)
    (i formal-const-decl "upto(n)" trace2fmla nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (n formal-const-decl "nat" trace2fmla nil)
    (m formal-const-decl "nat" trace2fmla nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (index const-decl "posnat" trace_resolution nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil))
   5679 300 t shostak))
 (translate_clause_TCC1 0
  (translate_clause_TCC1-1 nil 3482241771 3482242497
   ("" (subtype-tcc) nil nil) unfinished nil 144 120 t nil))
 (clause_clause 0
  (clause_clause-1 nil 3482242503 3482242947
   ("" (skolem-typepred)
    (("" (split)
      (("1" (flatten)
        (("1" (expand member)
          (("1" (lift-if)
            (("1" (split)
              (("1" (propax) nil nil)
               ("2" (split)
                (("1" (flatten) (("1" (grind) nil nil)) nil)
                 ("2" (flatten) (("2" (postpone) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   unfinished nil 444567 4520 t shostak)))

