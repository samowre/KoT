




more_finseq_props [ T:TYPE ] : THEORY
  BEGIN
  IMPORTING finseq_basic_props[T]

  s, s1, s2: VAR finseq[T]
  p: VAR PRED[T]
  a,b,c: VAR T
  x,y,z: VAR T
  bl(s): TYPE = below(length(s))
  ul(s): TYPE = upto(length(s))
  c: VAR [nat,nat]
  i,j,k,l: VAR nat
  


    % uniques

    % Find
  findi(p, s, (i: upto(s`length))):
    RECURSIVE lift[{ i: below(s`length) | p(s(i)) }] =
    	 IF i = s`length THEN bottom
    	 ELSIF p(s(i)) THEN up(i)
    	 ELSE findi(p, s, i + 1)
    	 ENDIF
  MEASURE s`length - i

  find(p, s): lift[{ i: below(s`length) | p(s(i)) }] =
    findi(p, s, 0)

 

  
  % Characterisation of comon functions


    % Find
  findi_exists: THEOREM
    FORALL (i: upto(s`length)):
      (EXISTS (j: subrange(i, s`length - 1)): p(s(j))) IMPLIES up?(findi(p, s, i))

  find_exists: THEOREM
    (EXISTS (i: below(s`length)): p(s(i))) IMPLIES up?(find(p, s))
  


 
 
 


  END more_finseq_props



% define map, finseq2
% finseq2list
% finseq2set

% list2set
