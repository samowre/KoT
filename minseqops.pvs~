minseqops [ T: TYPE ]
		: THEORY

  BEGIN

  fs, fs1, fs2, fs3: VAR finseq
  m, n: VAR nat


  prefix(fs, (m | upto(fs`length))): {fs1 : prefix?(fs1, fs)} =
    (fs ^^ (0, m))

  suffix?(fs)(fs1): bool = (fs1`length < fs`length AND
                            (FORALL (i: below(fs1`length)):
			       fs1(i) = fs(i + fs`length - fs1`length)))

  suffix(fs, (m | upto(fs`len))): (suffix?(fs)) = 
    (fs ^^ (m, fs`len))

  
  

  END minseqops
