(language
 (size_TCC1 0
  (size_TCC1-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC2 0
  (size_TCC2-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC3 0
  (size_TCC3-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC4 0
  (size_TCC4-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC5 0
  (size_TCC5-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC6 0
  (size_TCC6-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC7 0
  (size_TCC7-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC8 0
  (size_TCC8-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC9 0
  (size_TCC9-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC10 0
  (size_TCC10-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC11 0
  (size_TCC11-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC12 0
  (size_TCC12-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC13 0
  (size_TCC13-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC14 0
  (size_TCC14-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC15 0
  (size_TCC15-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC16 0
  (size_TCC16-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC17 0
  (size_TCC17-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC18 0
  (size_TCC18-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC19 0
  (size_TCC19-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC20 0
  (size_TCC20-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC21 0
  (size_TCC21-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC22 0
  (size_TCC22-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC23 0
  (size_TCC23-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC24 0
  (size_TCC24-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC25 0
  (size_TCC25-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC26 0
  (size_TCC26-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC27 0
  (size_TCC27-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC28 0
  (size_TCC28-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC29 0
  (size_TCC29-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC30 0
  (size_TCC30-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC31 0
  (size_TCC31-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC32 0
  (size_TCC32-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (size_TCC33 0
  (size_TCC33-1 nil 3583528309 ("" (termination-tcc) nil nil) nil nil))
 (parsed?_TCC1 0
  (parsed?_TCC1-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC2 0
  (parsed?_TCC2-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC3 0
  (parsed?_TCC3-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC4 0
  (parsed?_TCC4-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC5 0
  (parsed?_TCC5-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC6 0
  (parsed?_TCC6-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC7 0
  (parsed?_TCC7-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC8 0
  (parsed?_TCC8-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC9 0
  (parsed?_TCC9-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC10 0
  (parsed?_TCC10-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC11 0
  (parsed?_TCC11-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC12 0
  (parsed?_TCC12-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC13 0
  (parsed?_TCC13-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC14 0
  (parsed?_TCC14-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC15 0
  (parsed?_TCC15-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC16 0
  (parsed?_TCC16-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC17 0
  (parsed?_TCC17-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC18 0
  (parsed?_TCC18-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC19 0
  (parsed?_TCC19-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC20 0
  (parsed?_TCC20-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC21 0
  (parsed?_TCC21-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC22 0
  (parsed?_TCC22-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC23 0
  (parsed?_TCC23-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC24 0
  (parsed?_TCC24-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC25 0
  (parsed?_TCC25-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC26 0
  (parsed?_TCC26-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC27 0
  (parsed?_TCC27-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC28 0
  (parsed?_TCC28-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC29 0
  (parsed?_TCC29-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC30 0
  (parsed?_TCC30-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC31 0
  (parsed?_TCC31-1 nil 3583526924 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (parsed?_TCC32 0
  (parsed?_TCC32-1 nil 3583527714 ("" (termination-tcc) nil nil) nil
   nil))
 (type_decl_TCC1 0
  (type_decl_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((parsed? def-decl "bool" language nil)) nil))
 (type_var_TCC1 0
  (type_var_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((parsed? def-decl "bool" language nil)) nil))
 (type_def_TCC1 0
  (type_def_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (pretype type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (const_decl_TCC1 0
  (const_decl_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (pretype type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (const_var_TCC1 0
  (const_var_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (pretype type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (const_def_TCC1 0
  (const_def_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (pretype type-eq-decl nil language nil)
    (preterm type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (theory_def_TCC1 0
  (theory_def_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC1 0
  (length_TCC1-1 nil 3583526969 ("" (well-founded-tcc) nil nil) nil
   nil))
 (length_TCC2 0
  (length_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC3 0
  (length_TCC3-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil)
    (parsed? def-decl "bool" language nil)
    (restrict const-decl "R" restrict nil))
   nil))
 (length_TCC4 0
  (length_TCC4-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC5 0
  (length_TCC5-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil)
    (parsed? def-decl "bool" language nil)
    (restrict const-decl "R" restrict nil))
   nil))
 (length_TCC6 0
  (length_TCC6-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC7 0
  (length_TCC7-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil)
    (parsed? def-decl "bool" language nil)
    (restrict const-decl "R" restrict nil))
   nil))
 (length_TCC8 0
  (length_TCC8-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC9 0
  (length_TCC9-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil)
    (parsed? def-decl "bool" language nil)
    (restrict const-decl "R" restrict nil))
   nil))
 (length_TCC10 0
  (length_TCC10-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (premap type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (length_TCC11 0
  (length_TCC11-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_TCC12 0
  (length_TCC12-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (length_TCC13 0
  (length_TCC13-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_TCC14 0
  (length_TCC14-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (length_TCC15 0
  (length_TCC15-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_TCC16 0
  (length_TCC16-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (length_TCC17 0
  (length_TCC17-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_TCC18 0
  (length_TCC18-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (length_TCC19 0
  (length_TCC19-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_TCC20 0
  (length_TCC20-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (apply_TCC1 0
  (apply_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil))
   nil))
 (apply_TCC2 0
  (apply_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (apply_TCC3 0
  (apply_TCC3-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (apply_TCC4 0
  (apply_TCC4-1 nil 3583526969 ("" (termination-tcc) nil nil) nil nil))
 (apply_TCC5 0
  (apply_TCC5-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (rest_as_apply_TCC1 0
  (rest_as_apply_TCC1-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (rest_as_apply_TCC2 0
  (rest_as_apply_TCC2-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (length_apply_TCC1 0
  (length_apply_TCC1-1 nil 3583527234 ("" (subtype-tcc) nil nil) nil
   nil))
 (length_apply_TCC2 0
  (length_apply_TCC2-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (length_apply 0
  (length_apply-1 nil 3583527235
   ("" (induct "Γ")
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (grind) nil nil) ("5" (grind) nil nil) ("6" (grind) nil nil)
     ("7" (grind) nil nil) ("8" (grind) nil nil) ("9" (grind) nil nil)
     ("10" (grind) nil nil) ("11" (grind) nil nil)
     ("12" (grind) nil nil)
     ("13" (skosimp* :preds? t)
      (("13" (assert)
        (("13" (inst - "x!1 -1 ")
          (("1" (grind)
            (("1" (expand "apply" +) (("1" (grind) nil nil)) nil)) nil)
           ("2" (grind) nil nil))
          nil))
        nil))
      nil)
     ("14" (skosimp* :preds? t)
      (("14" (assert)
        (("14" (inst - "x!1 - 1")
          (("1" (grind !!)
            (("1" (expand "apply" +) (("1" (grind) nil nil)) nil)) nil)
           ("2" (grind) nil nil))
          nil))
        nil))
      nil)
     ("15" (skosimp* :preds? t)
      (("15" (assert)
        (("15" (expand "apply" +) (("15" (grind) nil nil)) nil)) nil))
      nil)
     ("16" (skosimp* :preds? t)
      (("16" (assert)
        (("16" (expand "apply" +) (("16" (grind) nil nil)) nil)) nil))
      nil)
     ("17" (skosimp* :preds? t)
      (("17" (assert)
        (("17" (expand "apply" +) (("17" (grind) nil nil)) nil)) nil))
      nil)
     ("18" (skosimp* :preds? t)
      (("18" (assert)
        (("18" (expand "apply" +) (("18" (grind) nil nil)) nil)) nil))
      nil)
     ("19" (skosimp* :preds? t)
      (("19" (assert)
        (("19" (assert)
          (("19" (skosimp* :preds? t)
            (("19" (assert)
              (("19" (inst - "x!1 - 1")
                (("1" (expand "apply" +) (("1" (grind) nil nil)) nil)
                 ("2" (expand "apply" +) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("20" (skosimp* :preds? t) (("20" (assert) nil nil)) nil)
     ("21" (grind) nil nil) ("22" (grind) nil nil)
     ("23" (grind) nil nil))
    nil)
   ((syntaxic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (prekeyword type-decl nil language nil)
    (parsed? def-decl "bool" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" language nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (precontext type-eq-decl nil language nil)
    (apply def-decl "precontext" language nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (syntaxic_induction formula-decl nil language nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   shostak))
 (apply_apply_TCC1 0
  (apply_apply_TCC1-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (apply_apply_TCC2 0
  (apply_apply_TCC2-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (apply_apply_TCC3 0
  (apply_apply_TCC3-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (rest_apply_TCC1 0
  (rest_apply_TCC1-1 nil 3583528837 ("" (subtype-tcc) nil nil) nil
   nil))
 (rest_apply_TCC2 0
  (rest_apply_TCC2-1 nil 3583528837 ("" (subtype-tcc) nil nil) nil
   nil))
 (rest_apply_TCC3 0
  (rest_apply_TCC3-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (rest_apply 0
  (rest_apply-1 nil 3583528837
   ("" (measure-induct "length(Γ)" "Γ")
    (("1" (skosimp* :preds? t)
      (("1" (assert) (("1" (postpone) nil nil)) nil)) nil)
     ("2" (postpone) nil nil) ("3" (postpone) nil nil))
    nil)
   nil shostak))
 (apply_length_TCC1 0
  (apply_length_TCC1-1 nil 3583529530 ("" (subtype-tcc) nil nil) nil
   nil))
 (doubleplus_TCC1 0
  (doubleplus_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (doubleplus_TCC2 0
  (doubleplus_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC3 0
  (doubleplus_TCC3-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC4 0
  (doubleplus_TCC4-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC5 0
  (doubleplus_TCC5-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC6 0
  (doubleplus_TCC6-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC7 0
  (doubleplus_TCC7-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC8 0
  (doubleplus_TCC8-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC9 0
  (doubleplus_TCC9-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC10 0
  (doubleplus_TCC10-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (prekeyword type-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC11 0
  (doubleplus_TCC11-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC12 0
  (doubleplus_TCC12-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC13 0
  (doubleplus_TCC13-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (prekeyword type-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC14 0
  (doubleplus_TCC14-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC15 0
  (doubleplus_TCC15-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC16 0
  (doubleplus_TCC16-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (prekeyword type-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC17 0
  (doubleplus_TCC17-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC18 0
  (doubleplus_TCC18-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC19 0
  (doubleplus_TCC19-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (prekeyword type-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC20 0
  (doubleplus_TCC20-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (doubleplus_TCC21 0
  (doubleplus_TCC21-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC22 0
  (doubleplus_TCC22-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (doubleplus_TCC23 0
  (doubleplus_TCC23-1 nil 3583528441 ("" (cases-tcc) nil nil) nil nil))
 (length_concat_TCC1 0
  (length_concat_TCC1-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil
   nil))
 (concat_empty_TCC1 0
  (concat_empty_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((parsed? def-decl "bool" language nil)) nil))
 (apply_concat_TCC1 0
  (apply_concat_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (apply_concat_TCC2 0
  (apply_concat_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (apply_concat_TCC3 0
  (apply_concat_TCC3-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (apply_concat_TCC4 0
  (apply_concat_TCC4-1 nil 3583529204 ("" (subtype-tcc) nil nil) nil
   nil))
 (kind_TCC1 0
  (kind_TCC1-1 nil 3583526969 ("" (cases-tcc) nil nil) nil nil))
 (compatible?_TCC1 0
  (compatible?_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (preinterp type-eq-decl nil language nil))
   nil))
 (compatible?_TCC2 0
  (compatible?_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (compatible?_TCC3 0
  (compatible?_TCC3-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (compatible?_TCC4 0
  (compatible?_TCC4-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil
   nil))
 (compatible?_TCC5 0
  (compatible?_TCC5-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC6 0
  (compatible?_TCC6-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC7 0
  (compatible?_TCC7-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil))
   nil))
 (compatible?_TCC8 0
  (compatible?_TCC8-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC9 0
  (compatible?_TCC9-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC10 0
  (compatible?_TCC10-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC11 0
  (compatible?_TCC11-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil))
   nil))
 (compatible?_TCC12 0
  (compatible?_TCC12-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC13 0
  (compatible?_TCC13-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (compatible?_TCC14 0
  (compatible?_TCC14-1 nil 3583528441 ("" (termination-tcc) nil nil)
   nil nil))
 (compatible?_TCC15 0
  (compatible?_TCC15-1 nil 3583528441 ("" (cases-tcc) nil nil) nil
   nil))
 (interp_TCC1 0
  (interp_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (interp_TCC2 0
  (interp_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (interp_TCC3 0
  (interp_TCC3-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (interp_TCC4 0
  (interp_TCC4-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC5 0
  (interp_TCC5-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC6 0
  (interp_TCC6-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC7 0
  (interp_TCC7-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC8 0
  (interp_TCC8-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (premap type-eq-decl nil language nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" language nil)
    (rest shared-adt-accessor-decl
          "[{x: syntaxic |     type_decl?(x) OR type_var?(x) OR type_def?(x) OR const_decl?(x) OR const_var?(x) OR const_def?(x) OR theory_def?(x) OR ikeep?(x) OR itype?(x) OR iconst?(x)} -> syntaxic]"
          language nil)
    (iconst? adt-recognizer-decl "[syntaxic -> boolean]" language nil)
    (itype? adt-recognizer-decl "[syntaxic -> boolean]" language nil)
    (ikeep? adt-recognizer-decl "[syntaxic -> boolean]" language nil)
    (theory_def? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (const_def? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (const_var? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (const_decl? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (type_def? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (type_var? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (type_decl? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC9 0
  (interp_TCC9-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC10 0
  (interp_TCC10-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC11 0
  (interp_TCC11-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC12 0
  (interp_TCC12-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC13 0
  (interp_TCC13-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (preinterp type-eq-decl nil language nil)
    (compatible? def-decl "bool" language nil)
    (parsed? def-decl "bool" language nil))
   nil))
 (interp_TCC14 0
  (interp_TCC14-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (length_interp_TCC1 0
  (length_interp_TCC1-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil
   nil))
 (weight_TCC1 0
  (weight_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (weight_TCC2 0
  (weight_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC3 0
  (weight_TCC3-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC4 0
  (weight_TCC4-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (weight_TCC5 0
  (weight_TCC5-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC6 0
  (weight_TCC6-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC7 0
  (weight_TCC7-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC8 0
  (weight_TCC8-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC9 0
  (weight_TCC9-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC10 0
  (weight_TCC10-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC11 0
  (weight_TCC11-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC12 0
  (weight_TCC12-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC13 0
  (weight_TCC13-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC14 0
  (weight_TCC14-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC15 0
  (weight_TCC15-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC16 0
  (weight_TCC16-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC17 0
  (weight_TCC17-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC18 0
  (weight_TCC18-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC19 0
  (weight_TCC19-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC20 0
  (weight_TCC20-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC21 0
  (weight_TCC21-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC22 0
  (weight_TCC22-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC23 0
  (weight_TCC23-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC24 0
  (weight_TCC24-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC25 0
  (weight_TCC25-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC26 0
  (weight_TCC26-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC27 0
  (weight_TCC27-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC28 0
  (weight_TCC28-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC29 0
  (weight_TCC29-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC30 0
  (weight_TCC30-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC31 0
  (weight_TCC31-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC32 0
  (weight_TCC32-1 nil 3583526969 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC33 0
  (weight_TCC33-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC34 0
  (weight_TCC34-1 nil 3583526969 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[syntaxic])" language nil))
   nil))
 (weight_TCC35 0
  (weight_TCC35-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC36 0
  (weight_TCC36-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC37 0
  (weight_TCC37-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC38 0
  (weight_TCC38-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC39 0
  (weight_TCC39-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC40 0
  (weight_TCC40-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC41 0
  (weight_TCC41-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC42 0
  (weight_TCC42-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC43 0
  (weight_TCC43-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC44 0
  (weight_TCC44-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC45 0
  (weight_TCC45-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC46 0
  (weight_TCC46-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC47 0
  (weight_TCC47-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC48 0
  (weight_TCC48-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC49 0
  (weight_TCC49-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC50 0
  (weight_TCC50-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC51 0
  (weight_TCC51-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC52 0
  (weight_TCC52-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC53 0
  (weight_TCC53-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC54 0
  (weight_TCC54-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC55 0
  (weight_TCC55-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC56 0
  (weight_TCC56-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC57 0
  (weight_TCC57-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC58 0
  (weight_TCC58-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC59 0
  (weight_TCC59-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC60 0
  (weight_TCC60-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC61 0
  (weight_TCC61-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC62 0
  (weight_TCC62-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC63 0
  (weight_TCC63-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC64 0
  (weight_TCC64-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC65 0
  (weight_TCC65-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC66 0
  (weight_TCC66-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC67 0
  (weight_TCC67-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC68 0
  (weight_TCC68-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC69 0
  (weight_TCC69-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC70 0
  (weight_TCC70-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC71 0
  (weight_TCC71-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC72 0
  (weight_TCC72-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC73 0
  (weight_TCC73-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC74 0
  (weight_TCC74-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC75 0
  (weight_TCC75-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_TCC76 0
  (weight_TCC76-1 nil 3583528441 ("" (subtype-tcc) nil nil) nil nil))
 (weight_TCC77 0
  (weight_TCC77-1 nil 3583528441 ("" (termination-tcc) nil nil) nil
   nil))
 (weight_max 0
  (weight_max-1 nil 3583529531
   ("" (induct "S")
    (("1" (typepred! "S!1") (("1" (grind) nil nil)) nil)
     ("2" (grind)
      (("1" (postpone) nil nil) ("2" (postpone) nil nil)
       ("3" (postpone) nil nil))
      nil)
     ("3" (postpone) nil nil) ("4" (postpone) nil nil)
     ("5" (postpone) nil nil) ("6" (postpone) nil nil)
     ("7" (postpone) nil nil) ("8" (postpone) nil nil)
     ("9" (postpone) nil nil) ("10" (postpone) nil nil)
     ("11" (postpone) nil nil) ("12" (postpone) nil nil)
     ("13" (postpone) nil nil) ("14" (postpone) nil nil)
     ("15" (postpone) nil nil) ("16" (postpone) nil nil)
     ("17" (postpone) nil nil) ("18" (postpone) nil nil)
     ("19" (postpone) nil nil) ("20" (postpone) nil nil)
     ("21" (postpone) nil nil) ("22" (postpone) nil nil)
     ("23" (postpone) nil nil))
    nil)
   nil shostak))
 (weight_definition_TCC1 0
  (weight_definition_TCC1-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (syntaxic type-decl nil language nil)
    (precontext type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (weight_definition_TCC2 0
  (weight_definition_TCC2-1 nil 3583526969 ("" (subtype-tcc) nil nil)
   nil nil))
 (weight_definition_TCC3 0
  (weight_definition_TCC3-1 nil 3583528441 ("" (subtype-tcc) nil nil)
   nil nil))
 (weight_definition_TCC4 0
  (weight_definition_TCC4-1 nil 3583528441 ("" (subtype-tcc) nil nil)
   nil nil))
 (weight_definition 0
  (weight_definition-1 nil 3583527146
   ("" (induct "Γ")
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (grind) nil nil) ("5" (grind) nil nil) ("6" (grind) nil nil)
     ("7" (grind) nil nil) ("8" (grind) nil nil) ("9" (grind) nil nil)
     ("10" (grind) nil nil) ("11" (grind) nil nil)
     ("12" (grind) nil nil)
     ("13" (skosimp* :preds? t)
      (("13" (assert)
        (("13" (auto-rewrite "rest_apply")
          (("13" (assert)
            (("13" (assert)
              (("13" (expand "weight" 1 2)
                (("13" (assert)
                  (("13" (case "x!1 = length(type_decl1_var!1)")
                    (("1" (assert) (("1" (postpone) nil nil)) nil)
                     ("2" (postpone) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (postpone) nil nil) ("15" (postpone) nil nil)
     ("16" (postpone) nil nil) ("17" (postpone) nil nil)
     ("18" (postpone) nil nil) ("19" (postpone) nil nil)
     ("20" (postpone) nil nil) ("21" (postpone) nil nil)
     ("22" (postpone) nil nil) ("23" (postpone) nil nil)
     ("24" (postpone) nil nil) ("25" (postpone) nil nil)
     ("26" (postpone) nil nil) ("27" (postpone) nil nil))
    nil)
   nil shostak)))

