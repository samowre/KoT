preserves_tau: THEORY
BEGIN
  IMPORTING tau

  Γ, Δ, Θ: VAR finseq[(scontext?)]
  U: VAR syntaxic
  x: VAR nat
  m, t: VAR (sexpr?)
  k: VAR keyword
  l: VAR list[pretcc]
  nb: VAR [nat, nat]
  n: VAR nat
  d: VAR (scontext?)
  ths?: VAR bool


  tau(Γ)(U): MACRO keyword = τ0(Γ)(U)`1
  tccs(Γ)(U): MACRO list[pretcc] = τ0(Γ)(U)`2



  % Very basic properties of τ0
  

  tau_rest: THEOREM x < length(Θ) AND
    KTHEORY?(tau(Γ)(theory_(Θ))) IMPLIES 
    KTHEORY?(tau(Γ)(theory_(rest(Θ, x))))
  tau_decl: THEOREM x < length(Θ) AND
    KTHEORY?(tau(Γ)(theory_(Θ))) IMPLIES 
    KDECL?(tau(Γ ++ rest(Θ, x))(Θ(x)))
  tau_def: THEOREM x < length(Θ) AND definition?(Θ(x)) AND
    KTHEORY?(tau(Γ)(theory_(Θ))) IMPLIES
    NOT UNDEFINED?(tau(Γ ++ rest(Θ, x))(def(Θ(x))))
  tau_type: THEOREM x < length(Θ) AND typed?(Θ(x)) AND
    KTHEORY?(tau(Γ)(theory_(Θ))) IMPLIES
    KTYPE?(tau(Γ ++ rest(Θ, x))(type_(Θ(x))))

  tau_concat: THEOREM
  KTHEORY?(tau(Γ)(theory_(Δ ++ Θ))) IFF 
  KTHEORY?(tau(Γ)(theory_(Δ))) AND KTHEORY?(tau(Γ ++ Δ)(theory_(Θ)))



  strong_shift_preserves: THEOREM
    tau(Γ ++ Δ ++ (Θ ↑ (length(Δ), 0)))(U ↑ (length(Δ), length(Θ))) 
    = tau(Γ ++ Θ)(U) ↑ (length(Δ), length(Θ))
  shift_preserves: THEOREM
    tau(Γ ++ Δ)(U ↑ length(Δ)) = tau(Γ)(U) ↑ (length(Δ), 0)

  strong_shift_tccs: THEOREM
    tccs(Γ ++ Δ ++ (Θ ↑ (length(Δ), 0)))(U ↑ (length(Δ), length(Θ)))
    = tccs(Γ ++ Θ)(U) ↑ (length(Δ), length(Θ))
  shift_tccs: THEOREM
    tccs(Γ ++ Δ)(U ↑ length(Δ)) = tccs(Γ)(U) ↑ (length(Δ), 0)

  strong_subst_preserves: THEOREM
    KTERM?(tau(Γ)(t)) IMPLIES
    LET T = TYPEOF(τ0(Γ)(t)`1) IN
    tau(Γ ++ subst(Δ, 0, t))(subst(U, length(Δ), t ↑ length(Δ)))
    = subst(tau(Γ ++ k(const_var(T)) ++ Δ)(U), length(Δ), t)
  subst_preserves: THEOREM
    KTERM?(tau(Γ)(t)) IMPLIES
    LET T = TYPEOF(τ0(Γ)(t)`1) IN
    tau(Γ)(subst(U, 0, t)) = subst(tau(Γ ++ k(const_var(T)))(U), 0, t)

  strong_subst_tccs: THEOREM
    KTERM?(tau(Γ)(t)) IMPLIES
    LET T = TYPEOF(τ0(Γ)(t)`1) IN
    tccs(Γ ++ subst(Δ, 0, t))(subst(U, length(Δ), t ↑ length(Δ)))
    = subst(tccs(Γ ++ k(const_var(T)) ++ Δ)(U), length(Δ), t)
  subst_tccs: THEOREM
    KTERM?(tau(Γ)(t)) IMPLIES
    LET T = TYPEOF(τ0(Γ)(t)`1) IN
    tccs(Γ)(subst(U, 0, t)) = subst(tccs(Γ ++ k(const_var(T)))(U), 0, t)


  mu0_idempotent: THEOREM
    μ0(μ0(U)) = μ0(U)
  mu0_preserves: THEOREM
    τ0(Γ)(μ0(U)) = τ0(Γ)(U)


  eta_preserves: THEOREM
    LET Δ = ρ0(Γ)(m) IN
    theory?(Δ) IMPLIES
    tau(Γ)(η(m, length(decls(Δ)))(U)) = η(m, length(decls(Δ)))(tau(Γ ++ decls(Δ))(U))

  %eta_tccs: THEOREM
  %  LET Δ = ρ0(Γ)(m) IN
  %  theory?(Δ) IMPLIES
  %  tccs(Γ)(η(m, length(decls(Δ)))(U)) = η(m, length(decls(Δ)))(tccs(Γ ++ decls(Δ))(U))


  expand_preserves: THEOREM
    tau(Γ)(expand(ths?)(Γ, U)) = tau(Γ)(U)




END preserves_tau

