(eta
 (η_TCC1 0
  (η_TCC1-1 nil 3583690452 ("" (subtype-tcc) nil nil)
   ((apply const-decl "(sdecl?)" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (sdecl? const-decl "bool" language nil)
    (theory_def? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (run_map adt-accessor-decl "[(map?) -> finseq[syntaxic]]" language
     nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (map? adt-recognizer-decl "[syntaxic -> boolean]" language nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (precontext type-eq-decl nil language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (empty const-decl "(scontext?)" language nil)
    (prekind? def-decl "bool" language nil)
    (prekeyword type-decl nil language nil)
    (scontext? const-decl "bool" language nil)
    (syntaxic type-decl nil language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (η_TCC2 0
  (η_TCC2-1 nil 3583690452
   ("" (skosimp* :preds? t)
    (("" (assert)
      (("" (use "semantic_pretheory")
        (("" (assert)
          (("" (expand "semantic?")
            (("" (assert)
              (("" (expand "prekind?" -1)
                (("" (lift-if)
                  (("" (bddsimp)
                    (("1" (assert) nil nil) ("2" (assert) nil nil)
                     ("3" (assert) nil nil) ("4" (assert) nil nil)
                     ("5" (assert) nil nil) ("6" (assert) nil nil)
                     ("7" (assert) nil nil) ("8" (assert) nil nil)
                     ("9" (assert) nil nil) ("10" (assert) nil nil)
                     ("11" (assert) nil nil) ("12" (assert) nil nil)
                     ("13" (assert) nil nil) ("14" (assert) nil nil)
                     ("15" (assert) nil nil) ("16" (assert) nil nil)
                     ("17" (assert) nil nil) ("18" (assert) nil nil)
                     ("19" (assert) nil nil) ("20" (assert) nil nil)
                     ("21" (assert) nil nil) ("22" (assert) nil nil)
                     ("23" (assert) nil nil) ("24" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((apply const-decl "(sdecl?)" language nil)
    (sdecl? const-decl "bool" language nil)
    (theory_def? adt-recognizer-decl "[syntaxic -> boolean]" language
     nil)
    (run_map adt-accessor-decl "[(map?) -> finseq[syntaxic]]" language
     nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (below type-eq-decl nil nat_types nil)
    (map? adt-recognizer-decl "[syntaxic -> boolean]" language nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (precontext type-eq-decl nil language nil)
    (PRECONTEXT adt-constructor-decl "(PRECONTEXT?)" language nil)
    (PRECONTEXT? adt-recognizer-decl "[prekeyword -> boolean]" language
     nil)
    (empty const-decl "(scontext?)" language nil)
    (prekind? def-decl "bool" language nil)
    (prekeyword type-decl nil language nil)
    (scontext? const-decl "bool" language nil)
    (syntaxic type-decl nil language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (semantic_pretheory formula-decl nil language nil)
    (semantic? const-decl "bool" language nil)
    (concat_empty formula-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (η_TCC3 0
  (η_TCC3-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC4 0
  (η_TCC4-1 nil 3583690452
   ("" (skosimp* :preds? t)
    (("" (assert)
      (("" (assert)
        (("" (use "shift_prekind" :polarity? t)
          (("" (inst - "σ!1" "PREINTERP" "Γ!1" "empty" "Δ!1")
            (("1" (assert)
              (("1" (assert)
                (("1"
                  (case "prekind?(Γ!1 ++ Δ!1)(σ!1 ↑ length(Δ!1))(PREINTERP)")
                  (("1" (assert)
                    (("1" (delete -2)
                      (("1" (rewrite -10 :dont-delete? t)
                        (("1" (expand "semantic?")
                          (("1" (assert)
                            (("1" (flatten)
                              (("1"
                                (case
                                 "kind?((Γ!1 ++ Δ!1)(m!1 + length(Δ!1)), PRECONTEXT)")
                                (("1"
                                  (assert)
                                  (("1" (postpone) nil nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (hide 4 5)
                                    (("2"
                                      (hide-all-but (-5 1))
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide-all-but (-1 1)) (("2" (grind) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil))
 (η_TCC5 0
  (η_TCC5-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC6 0
  (η_TCC6-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC7 0
  (η_TCC7-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC8 0
  (η_TCC8-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC9 0
  (η_TCC9-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC10 0
  (η_TCC10-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC11 0
  (η_TCC11-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC12 0
  (η_TCC12-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC13 0
  (η_TCC13-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC14 0
  (η_TCC14-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC15 0
  (η_TCC15-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC16 0
  (η_TCC16-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC17 0
  (η_TCC17-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC18 0
  (η_TCC18-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC19 0
  (η_TCC19-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC20 0
  (η_TCC20-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC21 0
  (η_TCC21-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC22 0
  (η_TCC22-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC23 0
  (η_TCC23-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC24 0
  (η_TCC24-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC25 0
  (η_TCC25-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC26 0
  (η_TCC26-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC27 0
  (η_TCC27-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC28 0
  (η_TCC28-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC29 0
  (η_TCC29-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC30 0
  (η_TCC30-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC31 0
  (η_TCC31-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC32 0
  (η_TCC32-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC33 0
  (η_TCC33-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC34 0
  (η_TCC34-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC35 0
  (η_TCC35-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC36 0
  (η_TCC36-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC37 0
  (η_TCC37-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC38 0
  (η_TCC38-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC39 0
  (η_TCC39-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC40 0
  (η_TCC40-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC41 0
  (η_TCC41-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC42 0
  (η_TCC42-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC43 0
  (η_TCC43-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC44 0
  (η_TCC44-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC45 0
  (η_TCC45-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC46 0
  (η_TCC46-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC47 0
  (η_TCC47-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC48 0
  (η_TCC48-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC49 0
  (η_TCC49-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC50 0
  (η_TCC50-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC51 0
  (η_TCC51-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC52 0
  (η_TCC52-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC53 0
  (η_TCC53-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC54 0
  (η_TCC54-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC55 0
  (η_TCC55-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC56 0
  (η_TCC56-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC57 0
  (η_TCC57-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC58 0
  (η_TCC58-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC59 0
  (η_TCC59-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC60 0
  (η_TCC60-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC61 0
  (η_TCC61-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC62 0
  (η_TCC62-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC63 0
  (η_TCC63-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC64 0
  (η_TCC64-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC65 0
  (η_TCC65-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC66 0
  (η_TCC66-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC67 0
  (η_TCC67-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC68 0
  (η_TCC68-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC69 0
  (η_TCC69-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC70 0
  (η_TCC70-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC71 0
  (η_TCC71-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC72 0
  (η_TCC72-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC73 0
  (η_TCC73-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC74 0
  (η_TCC74-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC75 0
  (η_TCC75-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC76 0
  (η_TCC76-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC77 0
  (η_TCC77-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC78 0
  (η_TCC78-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC79 0
  (η_TCC79-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC80 0
  (η_TCC80-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC81 0
  (η_TCC81-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC82 0
  (η_TCC82-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC83 0
  (η_TCC83-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC84 0
  (η_TCC84-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC85 0
  (η_TCC85-1 nil 3583690452 ("" (termination-tcc) nil nil) nil nil))
 (η_TCC86 0
  (η_TCC86-1 nil 3583690452 ("" (subtype-tcc) nil nil) nil nil))
 (η_TCC87 0
  (η_TCC87-1 nil 3583690452 ("" (cases-tcc) nil nil) nil nil))
 (η_TCC88 0
  (η_TCC88-1 nil 3583691147 ("" (cases-tcc) nil nil) nil nil)))

