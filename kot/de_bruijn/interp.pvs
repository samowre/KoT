interp: THEORY
BEGIN
  IMPORTING subst
  Θ: VAR (theory_def?) % FINSeQ
  σ: VAR finseq[(sinterp?)]
  s: VAR signature  

  interp(Θ, (σ | length(σ) = length(Θ))): (theory_def?) =
    theory_def(def(Θ) WITH [`seq := LAMBDA (z: below[length(Θ)]):
      CASES Θ(z) OF
        type_decl: IF σ(z) = ikeep THEN type_decl ELSE type_def(def(σ(z))) ENDIF
      , type_var: type_var
      , type_def(T): type_def(T)
      , const_decl(T): IF σ(z) = ikeep THEN const_decl(T) ELSE const_def(T, def(σ(z))) ENDIF
      , const_var(T): const_var(T)
      , const_def(T, a): const_def(T, a)
      , theory_def(Γ): theory_def(Γ)
      ENDCASES ])
END interp
