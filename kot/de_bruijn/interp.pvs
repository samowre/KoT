interp: THEORY
BEGIN
  IMPORTING subst

  Θ: VAR (theory_def?)
  % Δ: VAR finseq[(scontext?)]
  % σ: VAR finseq[(sinterp?)]
  i: VAR (interp?)
  x: VAR (sexpr?)
  s: VAR signature  

  interp(Θ)(s, (i | pretau(signature(Θ))(i)(s))): (theory_def?) = 
    LET m = i(m(i)),
        σ = map(i),
        Δ = (def :: [syntaxic -> finseq[(scontext?)]])(Θ(m)) IN
    theory_def(Δ WITH [`seq := LAMBDA (z: below[Δ`length]):
      CASES Δ(z) OF
        type_decl: IF σ(z) = ikeep THEN type_decl ELSE type_def(def(σ(z))) ENDIF
      , type_var: type_var
      , type_def(T): type_def(T)
      , const_decl(T): IF σ(z) = ikeep THEN const_decl(T) ELSE const_def(T, def(σ(z))) ENDIF
      , const_var(T): const_var(T)
      , const_def(T, a): const_def(T, a)
      , theory_def(Γ): theory_def(Γ)
      ENDCASES ])
END interp
