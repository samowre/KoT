(tau_props
 (type_correctness 0
  (type_correctness-1 nil 3584447740
   ("" (induct a)
    (("1" (skosimp* :preds? t)
      (("1" (assert)
        (("1" (expand τ -3)
          (("1" (expand τ 1 2)
            (("1" (lift-if)
              (("1" (split -3)
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (split -2)
                      (("1" (propax) nil nil)
                       ("2" (flatten)
                        (("2" (assert)
                          (("2" (split -1)
                            (("1" (assert)
                              (("1"
                                (expand finseq_appl)
                                (("1"
                                  (lemma shift_preserves)
                                  (("1"
                                    (invoke
                                     (inst
                                      -
                                      "%1"
                                      "%2"
                                      "Γ!1 ^^ (0, v1_var!1 + 1)")
                                     (~ "δ(%)(%)")
                                     (~ "δ(%1)(%)"))
                                    (("1"
                                      (case
                                       "rest(Γ!1, v1_var!1) ++ Γ!1 ^^ (0, v1_var!1 + 1) = Γ!1")
                                      (("1"
                                        (rewrite -1)
                                        (("1"
                                          (expand ^^ -1 1)
                                          (("1"
                                            (expand min)
                                            (("1"
                                              (expand over_keyword)
                                              (("1"
                                                (rewrite -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (rewrite
                                                     delta_preserves)
                                                    (("1"
                                                      (use tau_type)
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (expand
                                                           finseq_appl)
                                                          (("1"
                                                            (case
                                                             "empty_seq ++ rest(Γ!1, v1_var!1) = rest(Γ!1, v1_var!1)")
                                                            (("1"
                                                              (rewrite
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (1
                                                                -3
                                                                -4))
                                                              (("2"
                                                                (grind-with-ext)
                                                                (("2"
                                                                  (typepred
                                                                   x!1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand
                                                           kind
                                                           -1)
                                                          (("3"
                                                            (expand
                                                             typed?)
                                                            (("3"
                                                              (expand
                                                               finseq_appl)
                                                              (("3"
                                                                (hide
                                                                 2
                                                                 3)
                                                                (("3"
                                                                  (lift-if)
                                                                  (("3"
                                                                    (bddsimp
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("3"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("4"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("5"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("6"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("7"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (1 -3 -4))
                                        (("2"
                                          (grind-with-ext)
                                          (("2"
                                            (typepred x!1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skosimp* :preds? t)
      (("2" (expand τ -6)
        (("2" (expand τ 1 2)
          (("2" (lift-if)
            (("2" (assert)
              (("2" (split -6)
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (hide -8)
                      (("1" (lemma eta_preserves)
                        (("1" (inst - dot2_var!1 dot1_var!1 "Γ!1")
                          (("1" (assert)
                            (("1"
                              (inst -
                               "Γ!1 ++ decls(signature(Γ!1, dot1_var!1))")
                              (("1"
                                (split -9)
                                (("1" (postpone) nil nil)
                                 ("2" (postpone) nil nil)
                                 ("3" (postpone) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (postpone) nil nil) ("4" (postpone) nil nil)
     ("5" (postpone) nil nil) ("6" (postpone) nil nil)
     ("7" (postpone) nil nil) ("8" (postpone) nil nil)
     ("9" (postpone) nil nil) ("10" (postpone) nil nil)
     ("11" (postpone) nil nil) ("12" (postpone) nil nil)
     ("13" (postpone) nil nil) ("14" (postpone) nil nil)
     ("15" (postpone) nil nil) ("16" (postpone) nil nil)
     ("17" (postpone) nil nil) ("18" (postpone) nil nil)
     ("19" (postpone) nil nil) ("20" (postpone) nil nil)
     ("21" (postpone) nil nil) ("22" (postpone) nil nil))
    nil)
   nil shostak)))

