decl: THEORY
BEGIN
  IMPORTING language
  % TODO: note: definition is for the moment
  % defined over type_def and const_def only
  % since the definition of a theory has not the
  % type syntaxic.

  x, y: VAR nat
  Γ: VAR (theory_def?)

  % Function kind as informally defined at the begining of chapter 2.
  % Returns the kind of the symbol s
  % among CONSTANT, TYPE, THEORY
  kind(Γ)(x | x ∈ Γ): prekeyword =
    kw(signature(Γ(x)))
  AUTO_REWRITE+ kind


  % Checks that s has a definition in Γ
  % (such as s: TYPE = def_type, or s: T = def_term)
  definition?(Γ)(x | x ∈ Γ): bool =
    LET d = Γ(x) IN
    type_def?(d) OR const_def?(d) %OR theory_def?(d)

    
  % Function definition as informally defined at the begining of section 2.5
  % definition(Γ, s: TYPE = T, Δ)(s) = T
  % definition(Γ, s: T = a, Δ)(s) = a
  % definition(Γ, s: THEORY BEGIN Θ END, Δ)(s) = Θ
  definition(Γ)(x: (definition?(Γ))): (sexpr?) = 
    def(Γ(x))


  % Checks that s is a preterm in Γ,
  % i.e appears of the form s: T or s: T = a
  typed?(Γ)(x | x ∈ Γ): bool =
    LET d = Γ(x) IN 
    const_def?(d) OR const_var?(d) OR const_decl?(d)


  % Function type as informally defined at the begining of chapter 2.
  % type(Γ, x: T, Δ) = T
  % type(Γ, x: T = a, Δ) = T
  type_(Γ)(x: (typed?(Γ))): (sexpr?) =
    type_(Γ(x))
END decl
