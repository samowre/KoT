(|supertype|
 (|type_size_TCC1| 0
  (|type_size_TCC1-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[syntaxic])" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|type_size_TCC2| 0
  (|type_size_TCC2-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[syntaxic])" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|type_size_TCC3| 0
  (|type_size_TCC3-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[syntaxic])" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|type_size_TCC4| 0
  (|type_size_TCC4-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[syntaxic])" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|type_size_TCC5| 0
  (|type_size_TCC5-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[syntaxic])" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC1| 0
  (|divide_TCC1-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|divide_TCC2| 0
  (|divide_TCC2-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (∧ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|and_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC3| 0
  (|divide_TCC3-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL)
   ((|type_size| DEF-DECL "nat" |supertype| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC4| 0
  (|divide_TCC4-1| NIL 3584291454
   ("" (SUBTYPE-TCC)
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (GRIND) (("3" (EXPAND "sexpr?") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   NIL NIL))
 (|divide_TCC5| 0
  (|divide_TCC5-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|divide_TCC6| 0
  (|divide_TCC6-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL)
   ((|type_size| DEF-DECL "nat" |supertype| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC7| 0
  (|divide_TCC7-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC8| 0
  (|divide_TCC8-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL)
   ((|type_size| DEF-DECL "nat" |supertype| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC9| 0
  (|divide_TCC9-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|divide_TCC10| 0
  (|divide_TCC10-1| NIL 3584291454 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|divide_TCC11| 0
  (|divide_TCC11-1| NIL 3584291454 ("" (SUBTYPE-TCC) NIL NIL)
   ((|type_size| DEF-DECL "nat" |supertype| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC12| 0
  (|divide_TCC12-1| NIL 3584984595 ("" (SUBTYPE-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|divide_TCC13| 0
  (|divide_TCC13-1| NIL 3584984595 ("" (SUBTYPE-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mubody_TCC1| 0
  (|mubody_TCC1-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mubody_TCC2| 0
  (|mubody_TCC2-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL))
   NIL))
 (|mubody_TCC3| 0
  (|mubody_TCC3-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC4| 0
  (|mubody_TCC4-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL))
   NIL))
 (|mubody_TCC5| 0
  (|mubody_TCC5-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mubody_TCC6| 0
  (|mubody_TCC6-1| NIL 3584292541 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|mubody_TCC7| 0
  (|mubody_TCC7-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL))
   NIL))
 (|mubody_TCC8| 0
  (|mubody_TCC8-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC9| 0
  (|mubody_TCC9-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC10| 0
  (|mubody_TCC10-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC11| 0
  (|mubody_TCC11-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT)
      (("" (REWRITE -3) (("" (EXPAND "<<") (("" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC12| 0
  (|mubody_TCC12-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mubody_TCC13| 0
  (|mubody_TCC13-1| NIL 3584292541 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|mubody_TCC14| 0
  (|mubody_TCC14-1| NIL 3584292541 ("" (TERMINATION-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL))
   NIL))
 (|mubody_TCC15| 0
  (|mubody_TCC15-1| NIL 3584292541 ("" (TERMINATION-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC16| 0
  (|mubody_TCC16-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC17| 0
  (|mubody_TCC17-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC18| 0
  (|mubody_TCC18-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC19| 0
  (|mubody_TCC19-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC20| 0
  (|mubody_TCC20-1| NIL 3584292541
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +)
      (("" (EXPAND "sinterp?" +)
        (("" (EXPAND "scontext?" +) (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL))
   NIL))
 (|mubody_TCC21| 0
  (|mubody_TCC21-1| NIL 3584296737 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)) NIL))
 (|mubody_TCC22| 0
  (|mubody_TCC22-1| NIL 3584296737 ("" (TERMINATION-TCC) NIL NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL))
   NIL))
 (|mubody_TCC23| 0
  (|mubody_TCC23-1| NIL 3584296737 ("" (SUBTYPE-TCC) NIL NIL)
   ((|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL))
   NIL))
 (|π_TCC1| 0
  (|π_TCC1-1| NIL 3584293159
   ("" (SUBTYPE-TCC)
    (("1" (GRIND) (("1" (EXPAND "sexpr?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
     ("2" (EXPAND "sexpr?") (("2" (PROPAX) NIL NIL)) NIL)
     ("3" (EXPAND "sexpr?") (("3" (PROPAX) NIL NIL)) NIL)
     ("4" (EXPAND "sexpr?") (("4" (PROPAX) NIL NIL)) NIL))
    NIL)
   ((|same| TYPE-EQ-DECL NIL |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|mu_TCC1| 0
  (|mu_TCC1-1| NIL 3584293256
   ("" (SUBTYPE-TCC) (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL))
    NIL)
   NIL NIL))
 (|mu_TCC2| 0
  (|mu_TCC2-1| NIL 3584293256
   ("" (SKOSIMP* :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mu_TCC3| 0
  (|mu_TCC3-1| NIL 3584293256
   ("" (SKOSIMP* :PREDS? T)
    (("" (INVOKE (TYPEPRED "%1") (~ + "sexpr?(%1)")) NIL NIL)) NIL)
   ((>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mu_TCC4| 0
  (|mu_TCC4-1| NIL 3584984595
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mu_TCC5| 0
  (|mu_TCC5-1| NIL 3584984595
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|mu| 0
  (|mu-1| NIL 3584293280
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT)
      (("" (LIFT-IF)
        (("" (ASSERT)
          (("" (BDDSIMP)
            (("1" (ASSERT)
              (("1" (EXPAND "mubody" 1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "mubody" 1 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
             ("3" (EXPAND "mubody" 1 1) (("3" (ASSERT) NIL NIL)) NIL)
             ("4" (ASSERT) (("4" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|μ| CONST-DECL "(sexpr?)" |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mubody| DEF-DECL "[same(U), (sexpr?)]" |supertype| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|pi_TCC1| 0
  (|pi_TCC1-1| NIL 3584294172
   ("" (SUBTYPE-TCC) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|pi_TCC2| 0
  (|pi_TCC2-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC3| 0
  (|pi_TCC3-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC4| 0
  (|pi_TCC4-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC5| 0
  (|pi_TCC5-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC6| 0
  (|pi_TCC6-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC7| 0
  (|pi_TCC7-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC8| 0
  (|pi_TCC8-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC9| 0
  (|pi_TCC9-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC10| 0
  (|pi_TCC10-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC11| 0
  (|pi_TCC11-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC12| 0
  (|pi_TCC12-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC13| 0
  (|pi_TCC13-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC14| 0
  (|pi_TCC14-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi_TCC15| 0
  (|pi_TCC15-1| NIL 3584294172
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|pi| 0
  (|pi-1| NIL 3584294359
   ("" (SKOSIMP* :PREDS? T)
    (("" (ASSERT)
      (("" (LIFT-IF)
        (("" (BDDSIMP)
          (("1" (ASSERT)
            (("1" (DECOMPOSE-EQUALITY +)
              (("1" (EXPAND "mubody" 1 1) (("1" (PROPAX) NIL NIL)) NIL)
               ("2" (EXPAND "mubody" 1 1) (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (EXPAND "mubody" 1 2)
              (("2" (EXPAND "mubody" 1 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("3" (ASSERT)
            (("3" (EXPAND "mubody" 1 2)
              (("3" (EXPAND "mubody" 1 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("4" (ASSERT) (("4" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|π| CONST-DECL "(sexpr?)" |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lam| ADT-CONSTRUCTOR-DECL "[[(sexpr?), (sexpr?)] -> (lam?)]" |language|
     NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|mubody| DEF-DECL "[same(U), (sexpr?)]" |supertype| NIL)
    (|subtype?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|supertype| ADT-ACCESSOR-DECL "[(subtype?) -> (sexpr?)]" |language| NIL)
    (∧ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|app| ADT-CONSTRUCTOR-DECL "[[(sexpr?), (sexpr?)] -> (app?)]" |language|
     NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|v?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|v| ADT-CONSTRUCTOR-DECL "[nat -> (v?)]" |language| NIL)
    (|pred| ADT-ACCESSOR-DECL "[(subtype?) -> (sexpr?)]" |language| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|lam?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|syntaxic_lam_extensionality| FORMULA-DECL NIL |language| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|μ| CONST-DECL "(sexpr?)" |supertype| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|divide_size| 0
  (|divide_size-1| NIL 3584291729
   ("" (INDUCT "U")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
     ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
     ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL)
     ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL)
     ("13" (GRIND) NIL NIL) ("14" (GRIND) NIL NIL) ("15" (GRIND) NIL NIL)
     ("16" (GRIND) NIL NIL) ("17" (GRIND) NIL NIL) ("18" (GRIND) NIL NIL)
     ("19" (GRIND) NIL NIL) ("20" (GRIND) NIL NIL) ("21" (GRIND) NIL NIL)
     ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL))
    NIL)
   ((∧ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|and_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|syntaxic_induction| FORMULA-DECL NIL |language| NIL)
    (/ DEF-DECL "{V |
   (sexpr?(U) => sexpr?(V)) AND
    (sinterp?(U) => sinterp?(V)) AND (scontext?(U) => scontext?(V))}"
       |supertype| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL))
   NIL))
 (|mubody_size| 0
  (|mubody_size-1| NIL 3584295793
   ("" (INDUCT U)
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
     ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
     ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL)
     ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL)
     ("13" (GRIND) NIL NIL) ("14" (GRIND) NIL NIL) ("15" (GRIND) NIL NIL)
     ("16" (GRIND) NIL NIL) ("17" (GRIND) NIL NIL) ("18" (GRIND) NIL NIL)
     ("19" (GRIND) NIL NIL) ("20" (GRIND) NIL NIL) ("21" (GRIND) NIL NIL)
     ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|divide_size| APPLICATION-JUDGEMENT "{V | type_size(V) = type_size(U)}"
     |supertype| NIL)
    (∧ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|and_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|syntaxic_induction| FORMULA-DECL NIL |language| NIL)
    (|mubody| DEF-DECL "[same(U), (sexpr?)]" |supertype| NIL)
    (|same| TYPE-EQ-DECL NIL |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL))
   NIL))
 (|mu_size| 0
  (|mu_size-1| NIL 3584295793
   ("" (INDUCT T)
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
     ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
     ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL) ("9" (GRIND) NIL NIL)
     ("10" (GRIND) NIL NIL) ("11" (GRIND) NIL NIL) ("12" (GRIND) NIL NIL)
     ("13" (GRIND) NIL NIL) ("14" (GRIND) NIL NIL) ("15" (GRIND) NIL NIL)
     ("16" (GRIND) NIL NIL) ("17" (GRIND) NIL NIL) ("18" (GRIND) NIL NIL)
     ("19" (GRIND) NIL NIL) ("20" (GRIND) NIL NIL) ("21" (GRIND) NIL NIL)
     ("22" (GRIND) NIL NIL) ("23" (GRIND) NIL NIL) ("24" (GRIND) NIL NIL))
    NIL)
   ((|divide_size| APPLICATION-JUDGEMENT "{V | type_size(V) = type_size(U)}"
     |supertype| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|mu| FORMULA-DECL NIL |supertype| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|syntaxic_induction| FORMULA-DECL NIL |language| NIL)
    (|μ| CONST-DECL "(sexpr?)" |supertype| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL))
   NIL))
 (|shift_size| 0
  (|shift_size-1| NIL 3584296737 ("" (INDUCT-AND-SIMPLIFY "U") NIL NIL)
   ((+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|syntaxic_induction| FORMULA-DECL NIL |language| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL))
   NIL))
 (|subst_size| 0
  (|subst_size-1| NIL 3584296737
   ("" (INDUCT U)
    (("1" (SKOSIMP* :PREDS? T) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
      NIL)
     ("2" (SKOSIMP* :PREDS? T) (("2" (ASSERT) NIL NIL)) NIL)
     ("3" (SKOSIMP* :PREDS? T) (("3" (ASSERT) NIL NIL)) NIL)
     ("4" (SKOSIMP* :PREDS? T) (("4" (ASSERT) NIL NIL)) NIL)
     ("5" (SKOSIMP* :PREDS? T) (("5" (ASSERT) (("5" (GRIND) NIL NIL)) NIL))
      NIL)
     ("6" (SKOSIMP* :PREDS? T) (("6" (ASSERT) (("6" (GRIND) NIL NIL)) NIL))
      NIL)
     ("7" (SKOSIMP* :PREDS? T) (("7" (ASSERT) (("7" (GRIND) NIL NIL)) NIL))
      NIL)
     ("8" (SKOSIMP* :PREDS? T) (("8" (ASSERT) NIL NIL)) NIL)
     ("9" (SKOSIMP* :PREDS? T) (("9" (ASSERT) NIL NIL)) NIL)
     ("10" (SKOSIMP* :PREDS? T) (("10" (ASSERT) NIL NIL)) NIL)
     ("11" (SKOSIMP* :PREDS? T) (("11" (ASSERT) NIL NIL)) NIL)
     ("12" (SKOSIMP* :PREDS? T) (("12" (ASSERT) NIL NIL)) NIL)
     ("13" (SKOSIMP* :PREDS? T) (("13" (ASSERT) NIL NIL)) NIL)
     ("14" (SKOSIMP* :PREDS? T) (("14" (ASSERT) NIL NIL)) NIL)
     ("15" (SKOSIMP* :PREDS? T) (("15" (ASSERT) NIL NIL)) NIL)
     ("16" (SKOSIMP* :PREDS? T) (("16" (ASSERT) NIL NIL)) NIL)
     ("17" (SKOSIMP* :PREDS? T) (("17" (ASSERT) NIL NIL)) NIL)
     ("18" (SKOSIMP* :PREDS? T) (("18" (ASSERT) NIL NIL)) NIL)
     ("19" (SKOSIMP* :PREDS? T) (("19" (ASSERT) NIL NIL)) NIL)
     ("20" (SKOSIMP* :PREDS? T) (("20" (ASSERT) NIL NIL)) NIL)
     ("21" (SKOSIMP* :PREDS? T) (("21" (ASSERT) NIL NIL)) NIL)
     ("22" (SKOSIMP* :PREDS? T) (("22" (ASSERT) NIL NIL)) NIL)
     ("23" (SKOSIMP* :PREDS? T) (("23" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (↑ DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|shift_size| APPLICATION-JUDGEMENT "{V | type_size(V) = type_size(U)}"
     |supertype| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|syntaxic_induction| FORMULA-DECL NIL |language| NIL)
    (|subst| DEF-DECL "{V |
   (sexpr?(U) IFF sexpr?(V)) AND
    (sinterp?(U) IFF sinterp?(V)) AND
     (scontext?(U) IFF scontext?(V)) AND (ideep?(U) IFF ideep?(V))}"
     |subst| NIL)
    (|ideep?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|scontext?| ADT-DEF-DECL "boolean" |language| NIL)
    (|sinterp?| ADT-DEF-DECL "boolean" |language| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL))
   NIL))
 (|simeq_TCC1| 0
  (|simeq_TCC1-1| NIL 3584295489 ("" (TERMINATION-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC2| 0
  (|simeq_TCC2-1| NIL 3584295489
   ("" (SUBTYPE-TCC) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|simeq_TCC3| 0
  (|simeq_TCC3-1| NIL 3584295489 ("" (TERMINATION-TCC) NIL NIL)
   ((|t| CONST-DECL "(tcc?)" |language| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC4| 0
  (|simeq_TCC4-1| NIL 3584295489 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|simeq_TCC5| 0
  (|simeq_TCC5-1| NIL 3584295489 ("" (TERMINATION-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC6| 0
  (|simeq_TCC6-1| NIL 3584296184
   ("" (SUBTYPE-TCC) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|t| CONST-DECL "(tcc?)" |language| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (++ CONST-DECL "same(x)" |language| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC7| 0
  (|simeq_TCC7-1| NIL 3584296184
   ("" (SUBTYPE-TCC) (("" (EXPAND "sexpr?") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|t| CONST-DECL "(tcc?)" |language| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (++ CONST-DECL "same(x)" |language| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC8| 0
  (|simeq_TCC8-1| NIL 3585319261 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC9| 0
  (|simeq_TCC9-1| NIL 3585319261 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|simeq_TCC10| 0
  (|simeq_TCC10-1| NIL 3585319261 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC11| 0
  (|simeq_TCC11-1| NIL 3585319261 ("" (SUBTYPE-TCC) NIL NIL)
   ((|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|simeq_TCC12| 0
  (|simeq_TCC12-1| NIL 3585319261 ("" (TERMINATION-TCC) NIL NIL)
   ((++ CONST-DECL "same(x)" |language| NIL)
    (|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC1| 0
  (|sim_TCC1-1| NIL 3584984595
   ("" (SKOSIMP* :PREDS? T) (("" (GRIND) NIL NIL)) NIL)
   ((|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|t| CONST-DECL "(tcc?)" |language| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC2| 0
  (|sim_TCC2-1| NIL 3584984595
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC3| 0
  (|sim_TCC3-1| NIL 3584984595
   ("" (SKOSIMP* :PREDS? T)
    (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC4| 0
  (|sim_TCC4-1| NIL 3584984595 ("" (TERMINATION-TCC) NIL NIL)
   ((|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (++ CONST-DECL "same(x)" |language| NIL)
    (|t| CONST-DECL "(tcc?)" |language| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC5| 0
  (|sim_TCC5-1| NIL 3584984595
   ("" (SUBTYPE-TCC) (("" (EXPAND SEXPR? +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|forall_| CONST-DECL "(tcc?)" |init_context| NIL)
    (|forall_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (TRUE_ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|t| CONST-DECL "(tcc?)" |language| NIL)
    (≐ CONST-DECL "(sexpr?)" |init_context| NIL)
    (|equal| CONST-DECL "(sexpr?)" |init_context| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|bool_| CONST-DECL "(sexpr?)" |init_context| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (++ CONST-DECL "same(x)" |language| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mu_size| APPLICATION-JUDGEMENT "{A | type_size(A) = type_size(T)}"
     |supertype| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC6| 0
  (|sim_TCC6-1| NIL 3584984595
   ("" (GRIND) (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC7| 0
  (|sim_TCC7-1| NIL 3585319261 ("" (TERMINATION-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC8| 0
  (|sim_TCC8-1| NIL 3585319261
   ("" (GRIND) (("" (EXPAND "sexpr?" +) (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC9| 0
  (|sim_TCC9-1| NIL 3585319261
   ("" (GRIND) (("" (REWRITE "subst_size") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|subst_size| JUDGEMENT-TCC NIL |supertype| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|lproj?| ADT-RECOGNIZER-DECL "[syntaxic -> boolean]" |language| NIL)
    (|lproj| ADT-CONSTRUCTOR-DECL "[(sexpr?) -> (lproj?)]" |language| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|type_size| DEF-DECL "nat" |supertype| NIL))
   NIL))
 (|sim_TCC10| 0
  (|sim_TCC10-1| NIL 3585319261 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|sim_TCC11| 0
  (|sim_TCC11-1| NIL 3585319261 ("" (SUBTYPE-TCC) NIL NIL)
   ((O CONST-DECL "finseq" |finite_sequences| NIL)
    (++ CONST-DECL "same(x)" |language| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sexpr?| ADT-DEF-DECL "boolean" |language| NIL)
    (|syntaxic| TYPE-DECL NIL |language| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL)))

