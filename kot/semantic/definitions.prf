(definitions
 (η_TCC1 0
  (η_TCC1-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC2 0
  (η_TCC2-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC3 0
  (η_TCC3-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC4 0
  (η_TCC4-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC5 0
  (η_TCC5-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC6 0
  (η_TCC6-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC7 0
  (η_TCC7-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC8 0
  (η_TCC8-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC9 0
  (η_TCC9-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC10 0
  (η_TCC10-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC11 0
  (η_TCC11-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC12 0
  (η_TCC12-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC13 0
  (η_TCC13-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (η_TCC14 0
  (η_TCC14-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC15 0
  (η_TCC15-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC16 0
  (η_TCC16-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC17 0
  (η_TCC17-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC18 0
  (η_TCC18-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC19 0
  (η_TCC19-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC20 0
  (η_TCC20-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC21 0
  (η_TCC21-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC22 0
  (η_TCC22-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC23 0
  (η_TCC23-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC24 0
  (η_TCC24-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC25 0
  (η_TCC25-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC26 0
  (η_TCC26-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC27 0
  (η_TCC27-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC28 0
  (η_TCC28-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC29 0
  (η_TCC29-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC30 0
  (η_TCC30-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC31 0
  (η_TCC31-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC32 0
  (η_TCC32-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC33 0
  (η_TCC33-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC34 0
  (η_TCC34-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC35 0
  (η_TCC35-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC36 0
  (η_TCC36-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC37 0
  (η_TCC37-1 nil 3582061831 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (η_TCC38 0
  (η_TCC38-1 nil 3582061831 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil))
   nil))
 (η_TCC39 0
  (η_TCC39-1 nil 3582061831 ("" (cases-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (interp formula-decl nil language nil)
    (preterm formula-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (δ_TCC1 0
  (δ_TCC1-1 nil 3582062207 ("" (subtype-tcc) nil nil) nil nil))
 (δ_TCC2 0
  (δ_TCC2-1 nil 3582062207 ("" (termination-tcc) nil nil) nil nil))
 (δ_TCC3 0
  (δ_TCC3-1 nil 3582062207 ("" (subtype-tcc) nil nil) nil nil))
 (δ_TCC4 0
  (δ_TCC4-1 nil 3582062207 ("" (subtype-tcc) nil nil) nil nil))
 (δ_TCC5 0
  (δ_TCC5-1 nil 3582062207 ("" (subtype-tcc) nil nil) nil nil))
 (δ_TCC6 0
  (δ_TCC6-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (app_symbol_context rec-application-judgement "context" apply nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil))
 (δ_TCC7 0
  (δ_TCC7-1 nil 3582062207 ("" (subtype-tcc) nil nil) nil nil))
 (δ_TCC8 0
  (δ_TCC8-1 nil 3582062207 ("" (termination-tcc) nil nil) nil nil))
 (δ_TCC9 0
  (δ_TCC9-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC10 0
  (δ_TCC10-1 nil 3582062207 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC11 0
  (δ_TCC11-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC12 0
  (δ_TCC12-1 nil 3582062207 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC13 0
  (δ_TCC13-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC14 0
  (δ_TCC14-1 nil 3582062207 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC15 0
  (δ_TCC15-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC16 0
  (δ_TCC16-1 nil 3582062207 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC17 0
  (δ_TCC17-1 nil 3582062207 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC18 0
  (δ_TCC18-1 nil 3582062207 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (weight def-decl "nat" language nil)
    (pretype formula-decl nil language nil))
   nil))
 (δ_TCC19 0
  (δ_TCC19-1 nil 3582062207 ("" (cases-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (pretype formula-decl nil language nil)
    (name formula-decl nil language nil))
   nil)))

