set_props[T: TYPE]: THEORY
BEGIN
  x: VAR T
  a, b: VAR set[T]

  ;∅: MACRO set[T] = emptyset
  ;∈(x, a): MACRO bool = member(x, a)
  ;∉(x, a): MACRO bool = NOT member(x, a)
  ;⊂(a, b): MACRO bool = subset?(a, b)
  ;∪(a, b): MACRO set[T] = union(a, b)
  ;∪(a, x): MACRO set[T] = add(x, a)
  ;∪(x, a): MACRO set[T] = add(x, a)
  ;-(a, b): MACRO set[T] = difference(a, b)
  ;∩(a, b): MACRO set[T] = intersection(a, b)
  ;Δ(a, b): MACRO set[T] = symmetric_difference(a, b)
END set_props

syntaxic_sets: THEORY
BEGIN
  IMPORTING inductions, set_props
  
  Γ, Δ, Θ: VAR context
  A, B, T: VAR pretype
  r, s: VAR symbol
  n, m: VAR name
  x, y: VAR nat
  a, b, f, g: VAR preterm
  σ, τ: VAR interp
  S: VAR syntaxic
  M: VAR map


  ;-(vars: set[nat], i: nat): set[nat] =
    % { x - i | x ∈ vars }, j = x - i
    { j: nat | member(j + i, vars) }

  dvars(Γ): RECURSIVE nat =
    CASES Γ OF
      〈〉: 0
    , ktype_decl(s, Δ): dvars(Δ)
    , ktype_def(s, T, Δ): dvars(Δ)
    , ktype_ext(s, Δ): dvars(Δ)
    , kvar(T, Δ): dvars(Δ) + 1
    , kconst_decl(s, T, Δ): dvars(Δ)
    , kconst_def(s, T, a, Δ): dvars(Δ)
    , kconst_ext(s, T, Δ): dvars(Δ)
    , ktheory(s, Θ, Δ): dvars(Δ)
    ENDCASES
  MEASURE w(Γ)
  dvars_pretheory: THEOREM
    pretheory?(Γ) IMPLIES dvars(Γ) = 0

  dsymbols(Γ): RECURSIVE set[symbol] =
    CASES Γ OF
      〈〉: emptyset
    , ktype_decl(s, Δ): add(s, dsymbols(Δ))
    , ktype_def(s, T, Δ): add(s, dsymbols(Δ))
    , ktype_ext(s, Δ): add(s, dsymbols(Δ))
    , kvar(T, Δ): dsymbols(Δ)
    , kconst_decl(s, T, Δ): add(s, dsymbols(Δ))
    , kconst_def(s, T, a, Δ): add(s, dsymbols(Δ))
    , kconst_ext(s, T, Δ): add(s, dsymbols(Δ))
    , ktheory(s, Θ, Δ): add(s, dsymbols(Δ))
    ENDCASES
  MEASURE w(Γ)

  vars(S): RECURSIVE set[nat] =
    CASES S OF
      symbol(s): emptyset
    , dot(m, σ, s): vars(σ)

    , fun(A, B): union(vars(A), vars(B) - 1)
    , prod(A, B): union(vars(A), vars(B) - 1)
    , subtype(T, a): union(vars(T), vars(a) - 1)

    , v(i): singleton(i)
    , app(f, a): union(vars(f), vars(a))
    , lam(T, a): union(vars(T), vars(a) - 1)
    , pair(a, b): union(vars(a), vars(b))
    , lproj(a): vars(a)
    , rproj(a): vars(a)

    , 〈〉: emptyset
    , ktype_decl(s, Δ): vars(Δ)
    , ktype_def(s, T, Δ): union(vars(T) - dvars(Δ), vars(Δ))
    , ktype_ext(s, Δ): vars(Δ)
    , kvar(T, Δ): union(vars(T) - dvars(Δ), vars(Δ))
    , kconst_decl(s, T, Δ): union(vars(T) - dvars(Δ), vars(Δ))
    , kconst_def(s, T, a, Δ): union(vars(T) - dvars(Δ), union(vars(a) - dvars(Δ), vars(Δ)))
    , kconst_ext(s, T, Δ): union(vars(T) - dvars(Δ), vars(Δ))
    , ktheory(s, Θ, Δ): union(vars(Θ) - dvars(Δ), vars(Δ))

    , nil: emptyset
    , itype(s, T, σ): union(vars(T), vars(σ))
    , iconst(s, a, σ): union(vars(a), vars(σ))
    ENDCASES
  MEASURE w(S)

  symbols(S): RECURSIVE set[symbol] =
    CASES S OF
      symbol(s): singleton(s)
    , dot(m, σ, s): add(m, symbols(σ))

    , fun(A, B): union(symbols(A), symbols(B))
    , prod(A, B): union(symbols(A), symbols(B))
    , subtype(T, a): union(symbols(T), symbols(a))

    , v(i): emptyset
    , app(f, a): union(symbols(f), symbols(a))
    , lam(T, a): union(symbols(T), symbols(a))
    , pair(a, b): union(symbols(a), symbols(b))
    , lproj(a): symbols(a)
    , rproj(a): symbols(a)

    , 〈〉: emptyset
    , ktype_decl(s, Δ): symbols(Δ)
    , ktype_def(s, T, Δ): union(symbols(T) - dsymbols(Δ), symbols(Δ))
    , ktype_ext(s, Δ): symbols(Δ)
    , kvar(T, Δ): union(symbols(T) - dsymbols(Δ), symbols(Δ))
    , kconst_decl(s, T, Δ): union(symbols(T) - dsymbols(Δ), symbols(Δ))
    , kconst_def(s, T, a, Δ): union(symbols(T) - dsymbols(Δ), union(symbols(a) - dsymbols(Δ), symbols(Δ)))
    , kconst_ext(s, T, Δ): union(symbols(T) - dsymbols(Δ), symbols(Δ))
    , ktheory(s, Θ, Δ): union(symbols(Θ) - dsymbols(Δ), symbols(Δ))

    , nil: emptyset
    , itype(s, T, σ): union(symbols(T), symbols(σ))
    , iconst(s, a, σ): union(symbols(a), symbols(σ))
    ENDCASES
  MEASURE w(S)

  nonrecursive?(Γ): RECURSIVE bool =
    CASES Γ OF
      〈〉: TRUE
    , ktype_decl(s, Δ): s ∉ dsymbols(Δ) AND nonrecursive?(Δ)
    , ktype_def(s, T, Δ): s ∉ dsymbols(Δ) AND s ∉ symbols(T) AND nonrecursive?(Δ)
    , ktype_ext(s, Δ): s ∉ dsymbols(Δ) AND nonrecursive?(Δ)
    , kvar(T, Δ): nonrecursive?(Δ)
    , kconst_decl(s, T, Δ): s ∉ dsymbols(Δ) AND s ∉ symbols(T) AND nonrecursive?(Δ)
    , kconst_def(s, T, a, Δ):
        s ∉ dsymbols(Δ) AND s ∉ symbols(T) AND s ∉ symbols(a) AND nonrecursive?(Δ)
    , kconst_ext(s, T, Δ): s ∉ dsymbols(Δ) AND s ∉ symbols(T) AND nonrecursive?(Δ)
    , ktheory(s, Θ, Δ):
        s ∉ dsymbols(Δ) AND s ∉ symbols(Θ) AND nonrecursive?(Θ) AND nonrecursive?(Δ)
    ENDCASES
  MEASURE w(Γ)
END syntaxic_sets
