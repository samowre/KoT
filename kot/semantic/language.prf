(language
 (weight_TCC1 0
  (weight_TCC1-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC2 0
  (weight_TCC2-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC3 0
  (weight_TCC3-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC4 0
  (weight_TCC4-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC5 0
  (weight_TCC5-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC6 0
  (weight_TCC6-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC7 0
  (weight_TCC7-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC8 0
  (weight_TCC8-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC9 0
  (weight_TCC9-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC10 0
  (weight_TCC10-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC11 0
  (weight_TCC11-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC12 0
  (weight_TCC12-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC13 0
  (weight_TCC13-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC14 0
  (weight_TCC14-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC15 0
  (weight_TCC15-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC16 0
  (weight_TCC16-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC17 0
  (weight_TCC17-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC18 0
  (weight_TCC18-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC19 0
  (weight_TCC19-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC20 0
  (weight_TCC20-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC21 0
  (weight_TCC21-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC22 0
  (weight_TCC22-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC23 0
  (weight_TCC23-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC24 0
  (weight_TCC24-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC25 0
  (weight_TCC25-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC26 0
  (weight_TCC26-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC27 0
  (weight_TCC27-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC28 0
  (weight_TCC28-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC29 0
  (weight_TCC29-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC30 0
  (weight_TCC30-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC31 0
  (weight_TCC31-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC32 0
  (weight_TCC32-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC33 0
  (weight_TCC33-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (weight_TCC34 0
  (weight_TCC34-1 nil 3582058845 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[semantic])" language nil))
   nil))
 (F_TCC1 0
  (F_TCC1-1 nil 3582058845 ("" (existence-tcc) nil nil) nil nil))
 (prekind_TCC1 0
  (prekind_TCC1-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC2 0
  (prekind_TCC2-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC3 0
  (prekind_TCC3-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC4 0
  (prekind_TCC4-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC5 0
  (prekind_TCC5-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC6 0
  (prekind_TCC6-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC7 0
  (prekind_TCC7-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC8 0
  (prekind_TCC8-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC9 0
  (prekind_TCC9-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC10 0
  (prekind_TCC10-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC11 0
  (prekind_TCC11-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC12 0
  (prekind_TCC12-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC13 0
  (prekind_TCC13-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC14 0
  (prekind_TCC14-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC15 0
  (prekind_TCC15-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC16 0
  (prekind_TCC16-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC17 0
  (prekind_TCC17-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC18 0
  (prekind_TCC18-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC19 0
  (prekind_TCC19-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC20 0
  (prekind_TCC20-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC21 0
  (prekind_TCC21-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC22 0
  (prekind_TCC22-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC23 0
  (prekind_TCC23-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC24 0
  (prekind_TCC24-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC25 0
  (prekind_TCC25-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC26 0
  (prekind_TCC26-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC27 0
  (prekind_TCC27-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC28 0
  (prekind_TCC28-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC29 0
  (prekind_TCC29-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC30 0
  (prekind_TCC30-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC31 0
  (prekind_TCC31-1 nil 3581868892 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC32 0
  (prekind_TCC32-1 nil 3582048097 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (prekind_TCC33 0
  (prekind_TCC33-1 nil 3582048097 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (prekind_TCC34 0
  (prekind_TCC34-1 nil 3582048097 ("" (termination-tcc) nil nil)
   ((weight def-decl "nat" language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" sets nil))
   nil))
 (kind 0
       (kind-1 nil 3582046814 ("" (grind) nil nil)
        ((kind? const-decl "bool" language nil)) shostak))
 (keyword 0
          (keyword-1 nil 3581869120
           ("" (induct-and-simplify "S") nil nil)
           ((semantic type-decl nil language nil)
            (boolean nonempty-type-decl nil booleans nil)
            (bool nonempty-type-eq-decl nil booleans nil)
            (= const-decl "[T, T -> boolean]" equalities nil)
            (keyword? const-decl "bool" language nil)
            (OR const-decl "[bool, bool -> bool]" booleans nil)
            (KTYPE? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (KCONST? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (KVAR? adt-recognizer-decl "[semantic -> boolean]" language
             nil)
            (KTHEORY? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (KCONTEXT? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (semantic_induction formula-decl nil language nil)
            (finite_emptyset name-judgement "finite_set" finite_sets
             nil)
            (member const-decl "bool" sets nil)
            (emptyset const-decl "set" sets nil)
            (prekind def-decl "set[pre_kind]" language nil))
           shostak))
 (name 0
       (name-1 nil 3581869130 ("" (induct-and-simplify "S") nil nil)
        ((semantic type-decl nil language nil)
         (boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (= const-decl "[T, T -> boolean]" equalities nil)
         (name? const-decl "bool" language nil)
         (nat nonempty-type-eq-decl nil naturalnumbers nil)
         (below type-eq-decl nil nat_types nil)
         (character type-decl nil character_adt nil)
         (char? adt-recognizer-decl "[character -> boolean]"
          character_adt nil)
         (char type-eq-decl nil strings nil)
         (symbol nonempty-type-eq-decl nil language nil)
         (symbol? adt-recognizer-decl "[semantic -> boolean]" language
          nil)
         (symbol adt-constructor-decl "[symbol -> (symbol?)]" language
          nil)
         (TRUE const-decl "bool" booleans nil)
         (dot? adt-recognizer-decl "[semantic -> boolean]" language
          nil)
         (dot adt-constructor-decl
          "[[symbol, semantic, symbol] -> (dot?)]" language nil)
         (interp? const-decl "bool" language nil)
         (FALSE const-decl "bool" booleans nil)
         (semantic_induction formula-decl nil language nil)
         (finite_emptyset name-judgement "finite_set" finite_sets nil)
         (member const-decl "bool" sets nil)
         (emptyset const-decl "set" sets nil)
         (prekind def-decl "set[pre_kind]" language nil))
        shostak))
 (preterm 0
  (preterm-1 nil 3581869139 ("" (induct-and-simplify "S") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (preterm? const-decl "bool" language nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (var? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (v adt-constructor-decl "[nat -> (var?)]" language nil)
    (TRUE const-decl "bool" booleans nil)
    (app? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (app adt-constructor-decl "[[semantic, semantic] -> (app?)]"
     language nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (lam? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (lam adt-constructor-decl "[[semantic, semantic] -> (lam?)]"
         language nil)
    (pretype? const-decl "bool" language nil)
    (pair? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (pair adt-constructor-decl "[[semantic, semantic] -> (pair?)]"
     language nil)
    (lproj? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (lproj adt-constructor-decl "[semantic -> (lproj?)]" language nil)
    (rproj? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (rproj adt-constructor-decl "[semantic -> (rproj?)]" language nil)
    (name? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (prekind def-decl "set[pre_kind]" language nil))
   shostak))
 (pretype 0
  (pretype-1 nil 3581869144 ("" (induct-and-simplify "S") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pretype? const-decl "bool" language nil)
    (fun? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (fun adt-constructor-decl "[[semantic, semantic] -> (fun?)]"
     language nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (prod? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (prod adt-constructor-decl "[[semantic, semantic] -> (prod?)]"
     language nil)
    (subtype? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (subtype adt-constructor-decl
             "[[semantic, semantic] -> (subtype?)]" language nil)
    (preterm? const-decl "bool" language nil)
    (name? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (prekind def-decl "set[pre_kind]" language nil))
   shostak))
 (interp 0
         (interp-1 nil 3581888760
          ("" (induct-and-simplify "S") nil nil)
          ((semantic type-decl nil language nil)
           (boolean nonempty-type-decl nil booleans nil)
           (bool nonempty-type-eq-decl nil booleans nil)
           (= const-decl "[T, T -> boolean]" equalities nil)
           (interp? const-decl "bool" language nil)
           (null? adt-recognizer-decl "[semantic -> boolean]" language
            nil)
           (nil adt-constructor-decl "(null?)" language nil)
           (TRUE const-decl "bool" booleans nil)
           (nat nonempty-type-eq-decl nil naturalnumbers nil)
           (below type-eq-decl nil nat_types nil)
           (character type-decl nil character_adt nil)
           (char? adt-recognizer-decl "[character -> boolean]"
            character_adt nil)
           (char type-eq-decl nil strings nil)
           (symbol nonempty-type-eq-decl nil language nil)
           (itype? adt-recognizer-decl "[semantic -> boolean]" language
            nil)
           (itype adt-constructor-decl
            "[[symbol, semantic, semantic] -> (itype?)]" language nil)
           (AND const-decl "[bool, bool -> bool]" booleans nil)
           (pretype? const-decl "bool" language nil)
           (iconst? adt-recognizer-decl "[semantic -> boolean]"
            language nil)
           (iconst adt-constructor-decl
            "[[symbol, semantic, semantic] -> (iconst?)]" language nil)
           (preterm? const-decl "bool" language nil)
           (FALSE const-decl "bool" booleans nil)
           (semantic_induction formula-decl nil language nil)
           (finite_emptyset name-judgement "finite_set" finite_sets
            nil)
           (member const-decl "bool" sets nil)
           (emptyset const-decl "set" sets nil)
           (prekind def-decl "set[pre_kind]" language nil))
          shostak))
 (context 0
          (context-1 nil 3581869159
           ("" (induct-and-simplify "S") nil nil)
           ((semantic type-decl nil language nil)
            (boolean nonempty-type-decl nil booleans nil)
            (bool nonempty-type-eq-decl nil booleans nil)
            (= const-decl "[T, T -> boolean]" equalities nil)
            (context? const-decl "bool" language nil)
            (empty? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (〈〉 adt-constructor-decl "(empty?)" language nil)
            (TRUE const-decl "bool" booleans nil)
            (nat nonempty-type-eq-decl nil naturalnumbers nil)
            (below type-eq-decl nil nat_types nil)
            (character type-decl nil character_adt nil)
            (char? adt-recognizer-decl "[character -> boolean]"
             character_adt nil)
            (char type-eq-decl nil strings nil)
            (symbol nonempty-type-eq-decl nil language nil)
            (ktype_decl? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (ktype_decl adt-constructor-decl
             "[[symbol, semantic] -> (ktype_decl?)]" language nil)
            (ktype_def? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (ktype_def adt-constructor-decl
             "[[symbol, semantic, semantic] -> (ktype_def?)]" language
             nil)
            (AND const-decl "[bool, bool -> bool]" booleans nil)
            (pretype? const-decl "bool" language nil)
            (ktype_ext? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (ktype_ext adt-constructor-decl
             "[[symbol, semantic] -> (ktype_ext?)]" language nil)
            (kvar? adt-recognizer-decl "[semantic -> boolean]" language
             nil)
            (kvar adt-constructor-decl
             "[[semantic, semantic] -> (kvar?)]" language nil)
            (kconst_decl? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (kconst_decl adt-constructor-decl
             "[[symbol, semantic, semantic] -> (kconst_decl?)]"
             language nil)
            (kconst_def? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (kconst_def adt-constructor-decl
             "[[symbol, semantic, semantic, semantic] -> (kconst_def?)]"
             language nil)
            (preterm? const-decl "bool" language nil)
            (kconst_ext? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (kconst_ext adt-constructor-decl
             "[[symbol, semantic, semantic] -> (kconst_ext?)]" language
             nil)
            (ktheory? adt-recognizer-decl "[semantic -> boolean]"
             language nil)
            (ktheory adt-constructor-decl
             "[[symbol, semantic, semantic] -> (ktheory?)]" language
             nil)
            (pretheory? const-decl "bool" language nil)
            (FALSE const-decl "bool" booleans nil)
            (semantic_induction formula-decl nil language nil)
            (finite_emptyset name-judgement "finite_set" finite_sets
             nil)
            (member const-decl "bool" sets nil)
            (emptyset const-decl "set" sets nil)
            (prekind def-decl "set[pre_kind]" language nil))
           shostak))
 (pretheory 0
  (pretheory-1 nil 3581869164 ("" (induct-and-simplify "S") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pretheory? const-decl "bool" language nil)
    (empty? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (〈〉 adt-constructor-decl "(empty?)" language nil)
    (TRUE const-decl "bool" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (symbol nonempty-type-eq-decl nil language nil)
    (ktype_decl? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (ktype_decl adt-constructor-decl
     "[[symbol, semantic] -> (ktype_decl?)]" language nil)
    (ktype_def? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (ktype_def adt-constructor-decl
     "[[symbol, semantic, semantic] -> (ktype_def?)]" language nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (pretype? const-decl "bool" language nil)
    (ktype_ext? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (ktype_ext adt-constructor-decl
     "[[symbol, semantic] -> (ktype_ext?)]" language nil)
    (kconst_decl? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (kconst_decl adt-constructor-decl
     "[[symbol, semantic, semantic] -> (kconst_decl?)]" language nil)
    (kconst_def? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (kconst_def adt-constructor-decl
     "[[symbol, semantic, semantic, semantic] -> (kconst_def?)]"
     language nil)
    (preterm? const-decl "bool" language nil)
    (kconst_ext? adt-recognizer-decl "[semantic -> boolean]" language
     nil)
    (kconst_ext adt-constructor-decl
     "[[symbol, semantic, semantic] -> (kconst_ext?)]" language nil)
    (FALSE const-decl "bool" booleans nil)
    (semantic_induction formula-decl nil language nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (prekind def-decl "set[pre_kind]" language nil))
   shostak))
 (syntaxic 0
  (syntaxic-1 nil 3581869169
   ("" (grind) (("" (decompose-equality 1) nil nil)) nil)
   ((pre_kind type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (semantic type-decl nil language nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (prekind def-decl "set[pre_kind]" language nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (name? const-decl "bool" language nil)
    (interp? const-decl "bool" language nil)
    (pretheory? const-decl "bool" language nil)
    (context? const-decl "bool" language nil)
    (pretype? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (keyword? const-decl "bool" language nil)
    (member const-decl "bool" sets nil)
    (syntaxic? const-decl "bool" language nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (name_is_preterm 0
  (name_is_preterm-1 nil 3581868892
   ("" (induct-and-simplify "x") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (name? const-decl "bool" language nil)
    (preterm? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (name type-eq-decl nil language nil)
    (prekind def-decl "set[pre_kind]" language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (name_is_pretype 0
  (name_is_pretype-1 nil 3581868892
   ("" (induct-and-simplify "x") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (name? const-decl "bool" language nil)
    (pretype? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (name type-eq-decl nil language nil)
    (prekind def-decl "set[pre_kind]" language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (pretheory_is_context 0
  (pretheory_is_context-1 nil 3581868892
   ("" (induct-and-simplify "x") nil nil)
   ((semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pretheory? const-decl "bool" language nil)
    (context? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (pretheory type-eq-decl nil language nil)
    (prekind def-decl "set[pre_kind]" language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (keyword_is_syntaxic 0
  (keyword_is_syntaxic-1 nil 3581868892
   ("" (induct-and-simplify "x")
    (("1" (grind)
      (("1" (decompose-equality) (("1" (grind) nil nil)) nil)) nil)
     ("2" (decompose-equality) (("2" (grind) nil nil)) nil)
     ("3" (decompose-equality) (("3" (grind) nil nil)) nil)
     ("4" (decompose-equality) (("4" (grind) nil nil)) nil)
     ("5" (decompose-equality) (("5" (grind) nil nil)) nil))
    nil)
   ((pre_kind type-decl nil language nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pre_keyword? adt-recognizer-decl "[pre_kind -> boolean]" language
     nil)
    (pre_keyword adt-constructor-decl "(pre_keyword?)" language nil)
    (set type-eq-decl nil sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (prekind def-decl "set[pre_kind]" language nil)
    (member const-decl "bool" sets nil)
    (semantic type-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (keyword? const-decl "bool" language nil)
    (syntaxic? const-decl "bool" language nil)
    (semantic_induction formula-decl nil language nil)
    (keyword type-eq-decl nil language nil))
   nil))
 (name_is_syntaxic 0
  (name_is_syntaxic-1 nil 3581868892 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (name? const-decl "bool" language nil)
    (name type-eq-decl nil language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (syntaxic? const-decl "bool" language nil))
   nil))
 (preterm_is_syntaxic 0
  (preterm_is_syntaxic-1 nil 3581868892 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (preterm? const-decl "bool" language nil)
    (preterm type-eq-decl nil language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (syntaxic? const-decl "bool" language nil))
   nil))
 (pretype_is_syntaxic 0
  (pretype_is_syntaxic-1 nil 3581868892 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (pretype? const-decl "bool" language nil)
    (pretype type-eq-decl nil language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (syntaxic? const-decl "bool" language nil))
   nil))
 (interp_is_syntaxic 0
  (interp_is_syntaxic-1 nil 3581888682 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (interp? const-decl "bool" language nil)
    (interp type-eq-decl nil language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (syntaxic? const-decl "bool" language nil))
   nil))
 (context_is_syntaxic 0
  (context_is_syntaxic-1 nil 3581868892 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "bool" language nil)
    (context type-eq-decl nil language nil)
    (emptyset const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (syntaxic? const-decl "bool" language nil))
   nil))
 (rightarrow_TCC1 0
  (rightarrow_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((pretype formula-decl nil language nil)) nil))
 (⌈⌉_TCC1 0
  (⌈⌉_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((pretype formula-decl nil language nil)) nil))
 (Λ_TCC1 0
  (Λ_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((preterm formula-decl nil language nil)) nil))
 (〈〉_TCC1 0
  (〈〉_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((preterm formula-decl nil language nil)) nil))
 (app_preterm_TCC1 0
  (app_preterm_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((preterm formula-decl nil language nil)) nil))
 (bool__TCC1 0
  (bool__TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sbool const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (TRUE__TCC1 0
  (TRUE__TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (strue const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (FALSE__TCC1 0
  (FALSE__TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sfalse const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (boolop__TCC1 0
  (boolop__TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sboolop const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (pretype formula-decl nil language nil))
   nil))
 (¬_TCC1 0
  (¬_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (snot const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (vee_TCC1 0
  (vee_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sor const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (wedge_TCC1 0
  (wedge_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sand const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (supset_TCC1 0
  (supset_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (ssupset const-decl "symbol" language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (doteq_TCC1 0
  (doteq_TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sequalities const-decl "symbol" language nil)
    (sT const-decl "symbol" language nil)
    (sequal const-decl "symbol" language nil)
    (interp formula-decl nil language nil)
    (name formula-decl nil language nil)
    (preterm formula-decl nil language nil))
   nil))
 (forall__TCC1 0
  (forall__TCC1-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sbool const-decl "symbol" language nil))
   nil))
 (forall__TCC2 0
  (forall__TCC2-1 nil 3581868892 ("" (subtype-tcc) nil nil)
   ((list2finseq const-decl "finseq[T]" list2finseq nil)
    (sbool const-decl "symbol" language nil)
    (pretype formula-decl nil language nil))
   nil)))

