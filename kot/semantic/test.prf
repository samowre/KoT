(test (prec_TCC1 0
       (prec_TCC1-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC2 0
       (prec_TCC2-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC3 0
       (prec_TCC3-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC4 0
       (prec_TCC4-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC5 0
       (prec_TCC5-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC6 0
       (prec_TCC6-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC7 0
       (prec_TCC7-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (weight def-decl "nat" language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC8 0
       (prec_TCC8-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC9 0
       (prec_TCC9-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC10 0
       (prec_TCC10-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC11 0
       (prec_TCC11-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC12 0
       (prec_TCC12-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC13 0
       (prec_TCC13-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC14 0
       (prec_TCC14-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (weight def-decl "nat" language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC15 0
       (prec_TCC15-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC16 0
       (prec_TCC16-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC17 0
       (prec_TCC17-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC18 0
       (prec_TCC18-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC19 0
       (prec_TCC19-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC20 0
       (prec_TCC20-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC21 0
       (prec_TCC21-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (weight def-decl "nat" language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC22 0
       (prec_TCC22-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC23 0
       (prec_TCC23-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC24 0
       (prec_TCC24-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC25 0
       (prec_TCC25-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC26 0
       (prec_TCC26-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC27 0
       (prec_TCC27-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC28 0
       (prec_TCC28-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (weight def-decl "nat" language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC29 0
       (prec_TCC29-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC30 0
       (prec_TCC30-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC31 0
       (prec_TCC31-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (prec_TCC32 0
       (prec_TCC32-1 nil 3583104629 ("" (subtype-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil))
        nil))
      (prec_TCC33 0
       (prec_TCC33-1 nil 3583104629 ("" (termination-tcc) nil nil)
        ((boolean nonempty-type-decl nil booleans nil)
         (bool nonempty-type-eq-decl nil booleans nil)
         (NOT const-decl "[bool -> bool]" booleans nil)
         (semantic type-decl nil language nil)
         (context? const-decl "[semantic -> bool]" language nil)
         (context type-eq-decl nil language nil)
         (context formula-decl nil language nil)
         (weight def-decl "nat" language nil)
         (posint_plus_nnint_is_posint application-judgement "posint"
          integers nil)
         (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
          integers nil)
         (nnint_plus_posint_is_posint application-judgement "posint"
          integers nil)
         (real_lt_is_strict_total_order name-judgement
          "(strict_total_order?[real])" real_props nil))
        nil))
      (well_formed_increasing_TCC1 0
       (well_formed_increasing_TCC1-1 nil 3583104789
        ("" (subtype-tcc) nil nil) nil nil))
      (well_formed_increasing_TCC2 0
       (well_formed_increasing_TCC2-1 nil 3583104789
        ("" (subtype-tcc) nil nil) nil nil))
      (well_formed_increasing 0
       (well_formed_increasing-1 nil 3583104793
        ("" (induct "Γ" :name "context_induction")
         (("1" (grind) nil nil)
          ("2" (skosimp* :preds? t)
           (("2" (assert)
             (("2" (lift-if)
               (("2" (bddsimp -5)
                 (("1" (assert)
                   (("1" (auto-rewrite "vars")
                     (("1" (assert)
                       (("1" (case "ktype_decl(s!1, Δ!1) = Δ!2")
                         (("1" (assert)
                           (("1" (rewrite -1 :dir rl :dont-delete? t)
                             (("1" (assert) nil nil)) nil))
                           nil)
                          ("2" (assert)
                           (("2" (decompose-equality 1) nil nil)) nil))
                         nil))
                       nil))
                     nil))
                   nil)
                  ("2" (assert)
                   (("2" (inst - "e!1" "Δ!2")
                     (("2" (assert)
                       (("2" (auto-rewrite "vars")
                         (("2" (assert) (("2" (postpone) nil nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil))
             nil))
           nil)
          ("3" (postpone) nil nil) ("4" (postpone) nil nil)
          ("5" (postpone) nil nil) ("6" (postpone) nil nil)
          ("7" (postpone) nil nil) ("8" (postpone) nil nil)
          ("9" (postpone) nil nil) ("10" (postpone) nil nil))
         nil)
        nil shostak)))

