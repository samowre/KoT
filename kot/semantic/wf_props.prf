(wf_props
 (well_formed_definition_TCC1 0
  (well_formed_definition_TCC1-1 nil 3583064075
   ("" (skosimp* :preds? t)
    (("" (typepred "definition") (("" (grind) nil nil)) nil)) nil)
   ((definition shared-adt-accessor-decl
                "[d: {x: decl | TRUE} -> {x: semantic | IF dtype_def?(d) THEN pretype?(x) ELSE IF dconst_def?(d) THEN preterm?(x) ELSE pretheory?(x) ENDIF ENDIF}]"
                decl nil)
    (pretheory? const-decl "[semantic -> bool]" language nil)
    (preterm? const-decl "[semantic -> bool]" language nil)
    (dconst_def? adt-recognizer-decl "[decl -> boolean]" decl nil)
    (pretype? const-decl "[semantic -> bool]" language nil)
    (dtype_def? adt-recognizer-decl "[decl -> boolean]" decl nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (TRUE const-decl "bool" booleans nil) (decl type-decl nil decl nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (symbol nonempty-type-eq-decl nil language nil)
    (∈ def-decl "bool" map nil) (app_symbol def-decl "decl" map nil)
    (syntaxic formula-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (app_symbol_context rec-application-judgement "(kcontext?)" map
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (context? const-decl "[semantic -> bool]" language nil)
    (context type-eq-decl nil language nil)
    (syntaxic? const-decl "[semantic -> bool]" language nil)
    (syntaxic type-eq-decl nil language nil)
    (well_formed? def-decl "bool" well_formed nil)
    (empty? adt-recognizer-decl "[semantic -> boolean]" language nil)
    (〈〉 adt-constructor-decl "(empty?)" language nil)
    (well_formed_context type-eq-decl nil well_formed nil))
   nil))
 (well_formed_definition 0
  (well_formed_definition-1 nil 3583064098
   ("" (induct "Θ" :name "context_induction")
    (("1" (grind) nil nil)
     ("2" (skosimp* :preds? t)
      (("2" (assert)
        (("2" (flatten)
          (("2" (assert)
            (("2" (bddsimp +)
              (("1" (assert)
                (("1" (auto-rewrite "decl") (("1" (assert) nil nil))
                  nil))
                nil)
               ("2" (assert)
                (("2" (inst - "s!2" "Γ!1")
                  (("2" (assert) (("2" (postpone) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (postpone) nil nil) ("4" (postpone) nil nil)
     ("5" (postpone) nil nil) ("6" (postpone) nil nil)
     ("7" (postpone) nil nil) ("8" (postpone) nil nil)
     ("9" (postpone) nil nil) ("10" (postpone) nil nil))
    nil)
   nil shostak)))

