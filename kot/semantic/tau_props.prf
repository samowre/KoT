(tau_props
 (nadine_TCC1 0
  (nadine_TCC1-1 nil 3583101289 ("" (subtype-tcc) nil nil) nil nil))
 (nadine_TCC2 0
  (nadine_TCC2-1 nil 3583101523 ("" (subtype-tcc) nil nil) nil nil))
 (nadine 0
  (nadine-1 nil 3583101293
   ("" (induct S)
    (("1" (skosimp* :preds? t) (("1" (postpone) nil nil)) nil)
     ("2" (skosimp* :preds? t) (("2" (postpone) nil nil)) nil)
     ("3" (skosimp* :preds? t)
      (("3" (expand τ -6)
        (("3" (assert)
          (("3" (bddsimp)
            (("3" (lift-if)
              (("3" (bddsimp)
                (("1" (assert) nil nil)
                 ("2" (assert) (("2" (grind) nil nil)) nil)
                 ("3" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (skosimp* :preds? t) (("4" (grind) nil nil)) nil)
     ("5" (skosimp* :preds? t) (("5" (grind) nil nil)) nil)
     ("6" (skosimp* :preds? t)
      (("6" (grind) (("6" (postpone) nil nil)) nil)) nil)
     ("7" (skosimp* :preds? t)
      (("7" (expand τ -6)
        (("7" (assert)
          (("7" (lift-if)
            (("7" (bddsimp)
              (("1" (reduce)
                (("1" (decompose-equality)
                  (("1" (decompose-equality -8)
                    (("1" (postpone) nil nil)) nil))
                  nil)
                 ("2" (postpone) nil nil) ("3" (postpone) nil nil)
                 ("4" (postpone) nil nil) ("5" (postpone) nil nil)
                 ("6" (postpone) nil nil) ("7" (postpone) nil nil)
                 ("8" (postpone) nil nil) ("9" (postpone) nil nil)
                 ("10" (postpone) nil nil) ("11" (postpone) nil nil)
                 ("12" (grind) nil nil))
                nil)
               ("2" (grind) nil nil) ("3" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("8" (skosimp* :preds? t)
      (("8" (expand τ -6)
        (("8" (assert)
          (("8" (lift-if)
            (("8" (bddsimp)
              (("1" (decompose-equality -8)
                (("1" (rewrite -1 :dir rl)
                  (("1" (expand τ 1 1)
                    (("1" (lift-if)
                      (("1" (bddsimp)
                        (("1" (assert) nil nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (grind) nil nil) ("3" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (skosimp* :preds? t)
      (("9" (assert)
        (("9" (expand τ -6)
          (("9" (lift-if)
            (("9" (bddsimp)
              (("1" (smash)
                (("1" (decompose-equality -8)
                  (("1" (rewrite -1 :dir rl)
                    (("1" (expand τ 1 1)
                      (("1" (lift-if)
                        (("1" (bddsimp)
                          (("1" (assert) nil nil)
                           ("2" (postpone) nil nil)
                           ("3" (postpone) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (postpone) nil nil) ("11" (postpone) nil nil)
     ("12" (postpone) nil nil) ("13" (postpone) nil nil)
     ("14" (postpone) nil nil) ("15" (postpone) nil nil)
     ("16" (postpone) nil nil) ("17" (postpone) nil nil)
     ("18" (postpone) nil nil) ("19" (postpone) nil nil)
     ("20" (postpone) nil nil) ("21" (postpone) nil nil)
     ("22" (postpone) nil nil) ("23" (postpone) nil nil)
     ("24" (postpone) nil nil) ("25" (postpone) nil nil))
    nil)
   nil shostak)))

