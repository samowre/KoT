(decl
 (const_kind_is_typed_kind 0
  (const_kind_is_typed_kind-1 nil 3582315654 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (const_kind? const-decl "bool" decl nil)
    (const_kind type-eq-decl nil decl nil)
    (typed_kind? const-decl "bool" decl nil))
   nil))
 (var_kind_is_typed_kind 0
  (var_kind_is_typed_kind-1 nil 3582315654 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (var_kind? const-decl "bool" decl nil)
    (var_kind type-eq-decl nil decl nil)
    (typed_kind? const-decl "bool" decl nil))
   nil))
 (var_kind_when_typed_kind 0
  (var_kind_when_typed_kind-1 nil 3582315766 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (typed_kind? const-decl "bool" decl nil)
    (var_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil))
   shostak))
 (const_kind_when_typed_kind 0
  (const_kind_when_typed_kind-1 nil 3582315770 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (typed_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (var_kind? const-decl "bool" decl nil))
   shostak))
 (theory_kind_when_typed_kind 0
  (theory_kind_when_typed_kind-1 nil 3582315774 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (typed_kind? const-decl "bool" decl nil)
    (theory_kind? const-decl "bool" decl nil))
   shostak))
 (typed_kind_when_theory_kind 0
  (typed_kind_when_theory_kind-1 nil 3582315777 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (theory_kind? const-decl "bool" decl nil)
    (typed_kind? const-decl "bool" decl nil))
   shostak))
 (type_kind_when_typed_kind 0
  (type_kind_when_typed_kind-1 nil 3582315780 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (typed_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil))
   shostak))
 (typed_kind_when_type_kind 0
  (typed_kind_when_type_kind-1 nil 3582315782 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (type_kind? const-decl "bool" decl nil)
    (typed_kind? const-decl "bool" decl nil))
   shostak))
 (type_kind_when_theory_kind 0
  (type_kind_when_theory_kind-1 nil 3582315785 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (theory_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil))
   shostak))
 (theory_kind_when_type_kind 0
  (theory_kind_when_type_kind-1 nil 3582315788 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (type_kind? const-decl "bool" decl nil)
    (theory_kind? const-decl "bool" decl nil))
   shostak))
 (theory_kind_when_interp 0
  (theory_kind_when_interp-1 nil 3582315790 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (interp formula-decl nil language nil)
    (map formula-decl nil language nil)
    (theory_kind? const-decl "bool" decl nil))
   shostak))
 (interp_when_theory_kind 0
  (interp_when_theory_kind-1 nil 3582315793 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (interp formula-decl nil language nil)
    (theory_kind? const-decl "bool" decl nil))
   shostak))
 (kind_TCC1 0
  (kind_TCC1-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (context formula-decl nil language nil)
    (map formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC2 0
  (kind_TCC2-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC3 0
  (kind_TCC3-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (context formula-decl nil language nil)
    (map formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC4 0
  (kind_TCC4-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC5 0
  (kind_TCC5-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC6 0
  (kind_TCC6-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC7 0
  (kind_TCC7-1 nil 3582044098 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC8 0
  (kind_TCC8-1 nil 3582044098 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (context formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC9 0
  (kind_TCC9-1 nil 3582048363 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (interp formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC10 0
  (kind_TCC10-1 nil 3582048363 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (map formula-decl nil language nil)
    (interp formula-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_TCC11 0
  (kind_TCC11-1 nil 3582315716 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (≠ const-decl "[T, T -> bool]" notequal nil))
   nil))
 (kind_nonempty 0
  (kind_nonempty-1 nil 3582043686
   ("" (skosimp* :preds? t)
    (("" (rewrite "decl.kind") (("" (smash) nil nil)) nil)) nil)
   ((kind const-decl "{r: ε(kind?) | nonempty?(S) IFF r ≠ ⊥}" decl nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (nonempty formula-decl nil language nil)
    (kind formula-decl nil language nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil))
   nil))
 (kind_type 0
  (kind_type-1 nil 3582315799 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (kind const-decl "{r: ε(kind?) | nonempty?(S) IFF r ≠ ⊥}" decl nil)
    (type_kind? const-decl "bool" decl nil))
   shostak))
 (kind_const 0
  (kind_const-1 nil 3582315802 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (kind const-decl "{r: ε(kind?) | nonempty?(S) IFF r ≠ ⊥}" decl nil)
    (const_kind? const-decl "bool" decl nil))
   shostak))
 (kind_var 0
  (kind_var-1 nil 3582315804 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (kind const-decl "{r: ε(kind?) | nonempty?(S) IFF r ≠ ⊥}" decl nil)
    (var_kind? const-decl "bool" decl nil))
   shostak))
 (kind_theory 0
  (kind_theory-1 nil 3582315807 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (map? const-decl "[semantic -> bool]" language nil)
    (map type-eq-decl nil language nil)
    (kind const-decl "{r: ε(kind?) | nonempty?(S) IFF r ≠ ⊥}" decl nil)
    (theory_kind? const-decl "bool" decl nil))
   shostak))
 (nonempty_interp_is_definition 0
  (nonempty_interp_is_definition-1 nil 3582315654 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_interp? const-decl "[semantic -> bool]" language nil)
    (nonempty_interp type-eq-decl nil language nil)
    (nonempty_interp formula-decl nil language nil)
    (definition? const-decl "bool" decl nil))
   nil))
 (definition_TCC1 0
  (definition_TCC1-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil))
   nil))
 (definition_TCC2 0
  (definition_TCC2-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (definition_TCC3 0
  (definition_TCC3-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (definition_TCC4 0
  (definition_TCC4-1 nil 3582044098 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (definition_TCC5 0
  (definition_TCC5-1 nil 3582044098 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil)
    (interp formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (definition_TCC6 0
  (definition_TCC6-1 nil 3582310978 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (theory_kind? const-decl "bool" decl nil)
    (const_kind? const-decl "bool" decl nil)
    (type_kind? const-decl "bool" decl nil)
    (nonempty formula-decl nil language nil)
    (interp formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (definition_TCC7 0
  (definition_TCC7-1 nil 3582311133
   ("" (skosimp* :preds? t)
    (("" (rewrite "definition?")
      (("" (lift-if) (("" (bddsimp) nil nil)) nil)) nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty? const-decl "[semantic -> bool]" language nil)
    (nonempty type-eq-decl nil language nil)
    (definition? const-decl "bool" decl nil)
    (definition type-eq-decl nil decl nil))
   nil))
 (type__TCC1 0
  (type__TCC1-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil)
    (nonempty_context formula-decl nil language nil))
   nil))
 (type__TCC2 0
  (type__TCC2-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (nonempty_context formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (type__TCC3 0
  (type__TCC3-1 nil 3582043686 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (nonempty_context formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (type__TCC4 0
  (type__TCC4-1 nil 3582048363 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (nonempty_context formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (type__TCC5 0
  (type__TCC5-1 nil 3582310492 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (weight def-decl "nat" language nil)
    (nonempty_context formula-decl nil language nil)
    (context formula-decl nil language nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (type__TCC6 0
  (type__TCC6-1 nil 3582311239
   ("" (skosimp* :preds? t)
    (("" (rewrite "typed?") (("" (bddsimp) nil nil)) nil)) nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (semantic type-decl nil language nil)
    (nonempty_context? const-decl "[semantic -> bool]" language nil)
    (nonempty_context type-eq-decl nil language nil)
    (typed? const-decl "bool" decl nil)
    (typed type-eq-decl nil decl nil))
   nil)))

