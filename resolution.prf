(resolution (index_TCC1 0
             (index_TCC1-1 nil 3482010882 3482278101
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil))
              16 20 nil nil))
            (index_TCC2 0
             (index_TCC2-1 nil 3482010882 3482278101
              ("" (subtype-tcc) nil nil) unfinished
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil))
              82 60 nil nil))
            (index_TCC3 0
             (index_TCC3-1 nil 3482010882 3482278101
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil))
              20 20 nil nil))
            (index_TCC4 0
             (index_TCC4-1 nil 3482191174 3482278101
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil))
              41 20 nil nil))
            (index_TCC5 0
             (index_TCC5-1 nil 3482191799 3482278101
              ("" (subtype-tcc) nil nil) unfinished nil 127 90 nil
              nil))
            (clause_rec?_TCC1 0
             (clause_rec?_TCC1-1 nil 3482191174 3482278101
              ("" (termination-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (number nonempty-type-decl nil numbers nil)
               (number_field_pred const-decl "[number -> boolean]"
                number_fields nil)
               (number_field nonempty-type-from-decl nil number_fields
                nil)
               (real_pred const-decl "[number_field -> boolean]" reals
                          nil)
               (real nonempty-type-from-decl nil reals nil)
               (>= const-decl "bool" reals nil)
               (rational_pred const-decl "[real -> boolean]" rationals
                              nil)
               (rational nonempty-type-from-decl nil rationals nil)
               (integer_pred const-decl "[rational -> boolean]"
                             integers nil)
               (int nonempty-type-eq-decl nil integers nil)
               (nat nonempty-type-eq-decl nil naturalnumbers nil)
               (length def-decl "nat" list_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_ge_is_total_order name-judgement
                "(total_order?[real])" real_props nil)
               (prop_atom? const-decl "bool" resolution nil)
               (index const-decl "posnat" resolution nil))
              66 60 nil nil))
            (clause_rec_red 0
             (clause_rec_red-1 nil 3482191207 3482191444
              ("" (grind)
               (("" (case "null?(lAA!1)")
                 (("1" (grind) nil nil)
                  ("2" (expand clause_rec?)
                   (("2" (lift-if)
                     (("2" (replace 1)
                       (("2" (flatten)
                         (("2" (split)
                           (("1" (grind) nil nil)
                            ("2" (propax) nil nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished
              ((null? adt-recognizer-decl "[list -> boolean]" list_adt
                nil)
               (clause_rec? def-decl "bool" resolution nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (index const-decl "posnat" resolution nil)
               (prop_atom? const-decl "bool" resolution nil)
               (even_minus_odd_is_odd application-judgement "odd_int"
                integers nil)
               (mult_divides2 application-judgement "(divides(m))"
                divides nil)
               (mult_divides1 application-judgement "(divides(n))"
                divides nil)
               (even_times_int_is_even application-judgement "even_int"
                integers nil)
               (nnint_times_nnint_is_nnint application-judgement
                "nonneg_int" integers nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_ge_is_total_order name-judgement
                "(total_order?[real])" real_props nil)
               (boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (number nonempty-type-decl nil numbers nil)
               (number_field_pred const-decl "[number -> boolean]"
                number_fields nil)
               (number_field nonempty-type-from-decl nil number_fields
                nil)
               (real_pred const-decl "[number_field -> boolean]" reals
                          nil)
               (real nonempty-type-from-decl nil reals nil)
               (>= const-decl "bool" reals nil)
               (rational_pred const-decl "[real -> boolean]" rationals
                              nil)
               (rational nonempty-type-from-decl nil rationals nil)
               (integer_pred const-decl "[rational -> boolean]"
                             integers nil)
               (int nonempty-type-eq-decl nil integers nil)
               (nat nonempty-type-eq-decl nil naturalnumbers nil))
              237382 390 t shostak))
            (clause_prop_TCC1 0
             (clause_prop_TCC1-1 nil 3482191799 3482278101
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil))
              10 10 nil nil))
            (clause_prop_TCC2 0
             (clause_prop_TCC2-1 nil 3482191799 3482278101
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil))
              28 10 nil nil))
            (clause_prop 0
             (clause_prop-1 nil 3482192365 3482192814
              ("" (induct-and-simplify lAA)
               (("1" (lemma clause_rec_red)
                 (("1" (inst -1 "cons2_var!1" "index(cons1_var!1)" 0)
                   (("1" (delete -1)
                     (("1" (expand clause_rec?)
                       (("1" (lift-if) (("1" (assert) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil)
                ("2" (expand clause_rec? 1)
                 (("2" (lift-if)
                   (("2" (assert)
                     (("2" (split)
                       (("1" (propax) nil nil)
                        ("2" (flatten) (("2" (grind) nil nil)) nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished
              ((clause_rec_red formula-decl nil resolution nil)
               (nat nonempty-type-eq-decl nil naturalnumbers nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (clause_rec? def-decl "bool" resolution nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (cons? adt-recognizer-decl "[list -> boolean]" list_adt
                nil)
               (null? adt-recognizer-decl "[list -> boolean]" list_adt
                nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
               (AND const-decl "[bool, bool -> bool]" booleans nil)
               (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
               (index const-decl "posnat" resolution nil)
               (posnat nonempty-type-eq-decl nil integers nil)
               (> const-decl "bool" reals nil)
               (nonneg_int nonempty-type-eq-decl nil integers nil)
               (>= const-decl "bool" reals nil)
               (int nonempty-type-eq-decl nil integers nil)
               (integer_pred const-decl "[rational -> boolean]"
                             integers nil)
               (rational nonempty-type-from-decl nil rationals nil)
               (rational_pred const-decl "[real -> boolean]" rationals
                              nil)
               (< const-decl "bool" reals nil)
               (real nonempty-type-from-decl nil reals nil)
               (real_pred const-decl "[number_field -> boolean]" reals
                          nil)
               (number_field nonempty-type-from-decl nil number_fields
                nil)
               (number_field_pred const-decl "[number -> boolean]"
                number_fields nil)
               (number nonempty-type-decl nil numbers nil)
               (prop_atom? const-decl "bool" resolution nil)
               (IFF const-decl "[bool, bool -> bool]" booleans nil)
               (clause? const-decl "bool" resolution nil)
               (OR const-decl "[bool, bool -> bool]" booleans nil)
               (literal? const-decl "bool" resolution nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (boolean nonempty-type-decl nil booleans nil)
               (fmla type-decl nil fmla nil)
               (list_induction formula-decl nil list_adt nil))
              449378 900 t shostak))
            (remove_TCC1 0
             (remove_TCC1-1 nil 3482010882 3482278101
              ("" (skolem-typepred)
               (("" (flatten)
                 (("" (replace -7 -3)
                   (("" (expand "clause_lit_list?" -3)
                     (("" (case "cons?(r!1)")
                       (("1" (grind) nil nil) ("2" (grind) nil nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished
              ((real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (index const-decl "posnat" resolution nil)
               (cons? adt-recognizer-decl "[list -> boolean]" list_adt
                nil)
               (list type-decl nil list_adt nil)
               (PRED type-eq-decl nil defined_types nil)
               (literal? const-decl "bool" resolution nil)
               (fmla type-decl nil fmla nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (boolean nonempty-type-decl nil booleans nil))
              5 0 t nil))
            (remove_TCC2 0
             (remove_TCC2-1 nil 3482010882 3482278104
              ("" (skolem-typepred)
               (("" (flatten)
                 (("" (replace -6 -3)
                   (("" (expand "clause_lit_list?" -3)
                     (("" (case "cons?(r!1)")
                       (("1" (grind) nil nil) ("2" (grind) nil nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished
              ((real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (index const-decl "posnat" resolution nil)
               (cons? adt-recognizer-decl "[list -> boolean]" list_adt
                nil)
               (list type-decl nil list_adt nil)
               (PRED type-eq-decl nil defined_types nil)
               (literal? const-decl "bool" resolution nil)
               (fmla type-decl nil fmla nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (boolean nonempty-type-decl nil booleans nil))
              3014 2560 t nil))
            (remove_TCC3 0
             (remove_TCC3-1 nil 3482010882 3482278105
              ("" (termination-tcc) nil nil) unfinished
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (length def-decl "nat" list_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (index const-decl "posnat" resolution nil))
              905 740 nil nil))
            (remove_TCC4 0
             (remove_TCC4-1 nil 3482010882 3482278105
              ("" (skolem-typepred)
               (("" (case "clause_lit_list?(v!1(lA!1, r!1))")
                 (("1" (flatten)
                   (("1" (case "cons?(v!1(lA!1, r!1))")
                     (("1" (postpone) nil nil) ("2" (grind) nil nil))
                     nil))
                   nil)
                  ("2" (grind) nil nil) ("3" (grind) nil nil))
                 nil))
               nil)
              unfinished nil 25 20 t nil))
            (remove_TCC5 0
             (remove_TCC5-1 nil 3482089105 3482278106
              ("" (termination-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (literal? const-decl "bool" resolution nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (clause? const-decl "bool" resolution nil)
               (clause_rec? def-decl "bool" resolution nil)
               (length def-decl "nat" list_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (nnint_times_nnint_is_nnint application-judgement
                "nonneg_int" integers nil)
               (even_times_int_is_even application-judgement "even_int"
                integers nil)
               (mult_divides1 application-judgement "(divides(n))"
                divides nil)
               (mult_divides2 application-judgement "(divides(m))"
                divides nil)
               (prop_atom? const-decl "bool" resolution nil)
               (index const-decl "posnat" resolution nil))
              977 120 nil nil))
            (remove_TCC6 0
             (remove_TCC6-1 nil 3482089105 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 1571 1340 nil
              nil))
            (nclause2fmla_TCC1 0
             (nclause2fmla_TCC1-1 nil 3482270929 3482278108
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (nclause? const-decl "bool" resolution nil))
              12 10 nil nil))
            (nclause2fmla_TCC2 0
             (nclause2fmla_TCC2-1 nil 3482270929 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 23 20 nil nil))
            (nclause2fmla_TCC3 0
             (nclause2fmla_TCC3-1 nil 3482270929 3482278108
              ("" (termination-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (nclause? const-decl "bool" resolution nil)
               (length def-decl "nat" list_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil))
              53 30 nil nil))
            (clause_sentence_list 0
             (clause_sentence_list-1 nil 3482270948 3482271605
              ("" (induct clAA)
               (("1" (grind) nil nil) ("2" (grind) nil nil)
                ("3" (skolem-typepred)
                 (("3" (flatten)
                   (("3" (expand sentence_list? 1)
                     (("3" (expand freevars 1)
                       (("3" (lemma clause_prop)
                         (("3"
                           (inst -1 "cons(cons1_var!1, cons2_var!1)")
                           (("3" (flatten)
                             (("3" (hide -2)
                               (("3"
                                 (replace -5)
                                 (("3"
                                   (assert)
                                   (("3"
                                     (case "null?(cons2_var!1)")
                                     (("1"
                                       (grind)
                                       (("1"
                                         (expand termvars 1)
                                         (("1"
                                           (expand append 1 1)
                                           (("1"
                                             (assert)
                                             (("1"
                                               (grind)
                                               (("1"
                                                 (case
                                                  "length(args(cons1_var!1))=0")
                                                 (("1" (grind) nil nil)
                                                  ("2"
                                                   (postpone)
                                                   nil
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil)
                                        ("2" (postpone) nil nil))
                                       nil)
                                      ("2" (postpone) nil nil))
                                     nil))
                                   nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished nil 657323 580 t shostak))
            (or_reduction_TCC1 0
             (or_reduction_TCC1-1 nil 3482275916 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 20 20 nil nil))
            (or_reduction_TCC2 0
             (or_reduction_TCC2-1 nil 3482275916 3482278108
              ("" (subtype-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (nclause? const-decl "bool" resolution nil))
              12 20 nil nil))
            (or_reduction_TCC3 0
             (or_reduction_TCC3-1 nil 3482275916 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 38 10 nil nil))
            (not_or_reduction_TCC1 0
             (not_or_reduction_TCC1-1 nil 3482275916 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 23 30 nil nil))
            (include_clause_TCC1 0
             (include_clause_TCC1-1 nil 3482270929 3482278108
              ("" (subtype-tcc) nil nil) unfinished nil 302 220 nil
              nil))
            (include_clause_TCC2 0
             (include_clause_TCC2-1 nil 3482270929 3482278109
              ("" (subtype-tcc) nil nil) unfinished nil 284 240 nil
              nil))
            (include_clause_TCC3 0
             (include_clause_TCC3-1 nil 3482270929 3482278109
              ("" (termination-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (length def-decl "nat" list_props nil)
               (clause_rec? def-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil)
               (index const-decl "posnat" resolution nil))
              159 130 nil nil))
            (include_clause_TCC4 0
             (include_clause_TCC4-1 nil 3482270929 3482278109
              ("" (subtype-tcc) nil nil) unfinished nil 361 300 nil
              nil))
            (include_clause_TCC5 0
             (include_clause_TCC5-1 nil 3482270929 3482278109
              ("" (termination-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (nnint_plus_posint_is_posint application-judgement
                "posint" integers nil)
               (length def-decl "nat" list_props nil)
               (clause_rec? def-decl "bool" resolution nil)
               (prop_atom? const-decl "bool" resolution nil)
               (index const-decl "posnat" resolution nil))
              159 120 nil nil))
            (include_clause_TCC6 0
             (include_clause_TCC6-1 nil 3482270929 3482278110
              ("" (cond-disjoint-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (even_minus_odd_is_odd application-judgement "odd_int"
                integers nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (nnint_times_nnint_is_nnint application-judgement
                "nonneg_int" integers nil)
               (even_times_int_is_even application-judgement "even_int"
                integers nil)
               (mult_divides1 application-judgement "(divides(n))"
                divides nil)
               (mult_divides2 application-judgement "(divides(m))"
                divides nil)
               (index const-decl "posnat" resolution nil)
               (prop_atom? const-decl "bool" resolution nil))
              456 390 nil nil))
            (include_clause_TCC7 0
             (include_clause_TCC7-1 nil 3482270929 3482278110
              ("" (cond-coverage-tcc) nil nil) proved
              ((boolean nonempty-type-decl nil booleans nil)
               (bool nonempty-type-eq-decl nil booleans nil)
               (NOT const-decl "[bool -> bool]" booleans nil)
               (fmla type-decl nil fmla nil)
               (PRED type-eq-decl nil defined_types nil)
               (list type-decl nil list_adt nil)
               (every adt-def-decl "boolean" list_adt nil)
               (literal? const-decl "bool" resolution nil)
               (clause? const-decl "bool" resolution nil)
               (real_gt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (real_lt_is_strict_total_order name-judgement
                "(strict_total_order?[real])" real_props nil)
               (prop_atom? const-decl "bool" resolution nil))
              79 60 nil nil))
            (th1 0
             (th1-1 nil 3482276728 3482278530
              ("" (induct nclAA)
               (("1" (grind) nil nil) ("2" (grind) nil nil)
                ("3" (grind) nil nil)
                ("4" (skolem-typepred)
                 (("4" (flatten)
                   (("4" (lemma clause_prop)
                     (("4" (inst -1 "cons(cons1_var!1, cons2_var!1)")
                       (("4" (flatten)
                         (("4" (hide -2)
                           (("4" (replace -5)
                             (("4" (assert -1)
                               (("4"
                                 (split -1)
                                 (("1"
                                   (case "cons2_var!1=null")
                                   (("1"
                                     (replace -1)
                                     (("1"
                                       (assert -5)
                                       (("1"
                                         (hide -5)
                                         (("1"
                                           (skolem-typepred)
                                           (("1"
                                             (flatten)
                                             (("1"
                                               (lemma
                                                subset_include_clause)
                                               (("1"
                                                 (inst
                                                  -1
                                                  "cons(cons1_var!1, null)"
                                                  "clCC!1")
                                                 (("1"
                                                   (replace -13 -1)
                                                   (("1"
                                                     (expand subset)
                                                     (("1"
                                                       (flatten)
                                                       (("1"
                                                         (expand
                                                          "not_or_reduction"
                                                          1
                                                          1)
                                                         (("1"
                                                           (expand
                                                            "nclause2fmla"
                                                            1
                                                            1)
                                                           (("1"
                                                             (expand
                                                              "append"
                                                              1
                                                              1)
                                                             (("1"
                                                               (expand
                                                                "append"
                                                                1
                                                                1)
                                                               (("1"
                                                                 (postpone)
                                                                 nil
                                                                 nil))
                                                               nil))
                                                             nil))
                                                           nil))
                                                         nil))
                                                       nil))
                                                     nil))
                                                   nil))
                                                 nil))
                                               nil))
                                             nil))
                                           nil))
                                         nil))
                                       nil))
                                     nil)
                                    ("2" (grind) nil nil))
                                   nil)
                                  ("2" (postpone) nil nil))
                                 nil))
                               nil))
                             nil))
                           nil))
                         nil))
                       nil))
                     nil))
                   nil))
                 nil))
               nil)
              unfinished nil 409351 190 t shostak)))

